{"ast":null,"code":"var _dec, _class, _Vec;\nimport * as THREE from \"three\";\nimport { VectorBase } from \"../VectorBase\";\nimport { Random } from \"../../Random\";\nimport { ASerializable } from \"../../../base\";\nimport { Vec2 } from \"./Vec2\";\nimport { Vec4 } from \"../3D\";\nexport let Vec3 = (_dec = ASerializable(\"Vec3\"), _dec(_class = (_Vec = class Vec3 extends VectorBase {\n  constructor(...args) {\n    // common logic constructor\n    super(...args);\n  }\n  static UnitX() {\n    return new this(1, 0, 0);\n  }\n  static UnitY() {\n    return new this(0, 1, 0);\n  }\n  static UnitZ() {\n    return new this(0, 0, 1);\n  }\n  toString() {\n    return `Vec3(${this.x},${this.y},${this.z})`;\n  }\n  get nDimensions() {\n    return 3;\n  }\n  get xy() {\n    return new Vec2(this.elements[0], this.elements[1]);\n  }\n  set xy(value) {\n    this.elements[0] = value.x;\n    this.elements[1] = value.y;\n  }\n  get z() {\n    return this.elements[2];\n  }\n  set z(val) {\n    this.elements[2] = val;\n  }\n  get h() {\n    return this.elements[2];\n  }\n  set h(val) {\n    this.elements[2] = val;\n  }\n\n  // get i(){\n  //     return this.elements[0];\n  // }\n  // get j(){\n  //     return this.elements[1];\n  // }\n  // get k(){\n  //     return this.elements[2];\n  // }\n\n  _setToDefault() {\n    this.elements = [0, 0, 0];\n  }\n\n  /**\n   * Cross product of this with other\n   * @param other\n   * @returns {Vec3}\n   */\n  cross(other) {\n    return new Vec3(this.y * other.z - this.z * other.y, this.z * other.x - this.x * other.z, this.x * other.y - this.y * other.x);\n  }\n  homogenize() {\n    if (this.h === 1 || this.h === 0) {\n      return;\n    }\n    let ooh = 1.0 / this.h;\n    this.elements[0] = this.elements[0] * ooh;\n    this.elements[1] = this.elements[1] * ooh;\n    this.h = 1;\n  }\n  getHomogenized() {\n    const h = this.clone();\n    h.homogenize();\n    return h;\n  }\n  get XY() {\n    return new Vec2(this.x, this.y);\n  }\n  get Point2D() {\n    let h = this.getHomogenized();\n    return new Vec2(h.x, h.y);\n  }\n  get Point3DH() {\n    return new Vec4(this.x, this.y, this.z, 1);\n  }\n  get Vec3DH() {\n    return new Vec4(this.x, this.y, this.z, 0);\n  }\n  static From2DHPoint(p) {\n    return new Vec3(p.x, p.y, 1.0);\n  }\n  static FromVec2(p) {\n    return new Vec3(p.x, p.y, 0.0);\n  }\n  static Random() {\n    var r = new this(Random.floatArray(3));\n    return r;\n  }\n  static FromThreeJS(vec) {\n    return new this(vec.x, vec.y, vec.z);\n  }\n  sstring(precision) {\n    return `[${this.x.toPrecision(precision)},${this.y.toPrecision(precision)},${this.z.toPrecision(precision)}]`;\n  }\n  asThreeJS() {\n    return new THREE.Vector3(this.x, this.y, this.z);\n  }\n  getRotatedByQuaternion(q) {\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const qx = -q.x,\n      qy = -q.y,\n      qz = -q.z,\n      qw = q.w;\n\n    // calculate quat * vector\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    let rval = new Vec3();\n    rval.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    rval.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    rval.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return rval;\n  }\n}, _Vec.N_DIMENSIONS = 3, _Vec)) || _class);\nexport function V3(...elements) {\n  return new Vec3(...elements);\n}\n_c = V3;\nfunction _Vec2DH(x, y) {\n  return new Vec3(x, y, 0);\n}\nfunction _Point2DH(x, y) {\n  return new Vec3(x, y, 1);\n}\nexport function Vec2DH(...args) {\n  if (args[0] instanceof VectorBase) {\n    return _Vec2DH(args[0].x, args[0].y);\n  } else if (Array.isArray(args[0])) {\n    return _Vec2DH(args[0][0], args[0][1]);\n  } else {\n    return _Vec2DH(args[0], args[1]);\n  }\n}\n_c2 = Vec2DH;\nexport function Point2DH(...args) {\n  if (args[0] instanceof VectorBase) {\n    return _Point2DH(args[0].x, args[0].y);\n  } else if (Array.isArray(args[0])) {\n    return _Point2DH(args[0][0], args[0][1]);\n  } else {\n    return _Point2DH(args[0], args[1]);\n  }\n}\n_c3 = Point2DH;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"V3\");\n$RefreshReg$(_c2, \"Vec2DH\");\n$RefreshReg$(_c3, \"Point2DH\");","map":{"version":3,"names":["THREE","VectorBase","Random","ASerializable","Vec2","Vec4","Vec3","_dec","_class","_Vec","constructor","args","UnitX","UnitY","UnitZ","toString","x","y","z","nDimensions","xy","elements","value","val","h","_setToDefault","cross","other","homogenize","ooh","getHomogenized","clone","XY","Point2D","Point3DH","Vec3DH","From2DHPoint","p","FromVec2","r","floatArray","FromThreeJS","vec","sstring","precision","toPrecision","asThreeJS","Vector3","getRotatedByQuaternion","q","qx","qy","qz","qw","w","ix","iy","iz","iw","rval","N_DIMENSIONS","V3","_c","_Vec2DH","_Point2DH","Vec2DH","Array","isArray","_c2","Point2DH","_c3","$RefreshReg$"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/math/linalg/2D/Vec3.ts"],"sourcesContent":["import * as THREE from \"three\";\nimport { VectorBase } from \"../VectorBase\";\nimport { Random } from \"../../Random\";\nimport { ASerializable } from \"../../../base\";\nimport { Vec2 } from \"./Vec2\";\nimport { Vec4 } from \"../3D\";\nimport { Quaternion } from \"../3D\";\n\n@ASerializable(\"Vec3\")\nexport class Vec3 extends VectorBase {\n  static N_DIMENSIONS: number = 3;\n  public constructor(x: number, y: number, z: number);\n  public constructor(elements?: Array<number>);\n  public constructor(...args: Array<any>) {\n    // common logic constructor\n    super(...args);\n  }\n\n  static UnitX(){\n    return new this(1,0,0);\n  }\n\n  static UnitY(){\n    return new this(0,1,0);\n  }\n\n  static UnitZ(){\n    return new this(0,0,1);\n  }\n\n\n  toString() {\n    return `Vec3(${this.x},${this.y},${this.z})`;\n  }\n\n  get nDimensions() {\n    return 3;\n  }\n\n  get xy() {\n    return new Vec2(this.elements[0], this.elements[1]);\n  }\n  set xy(value: Vec2) {\n    this.elements[0] = value.x;\n    this.elements[1] = value.y;\n  }\n\n  get z() {\n    return this.elements[2];\n  }\n  set z(val: number) {\n    this.elements[2] = val;\n  }\n  get h() {\n    return this.elements[2];\n  }\n  set h(val: number) {\n    this.elements[2] = val;\n  }\n\n  // get i(){\n  //     return this.elements[0];\n  // }\n  // get j(){\n  //     return this.elements[1];\n  // }\n  // get k(){\n  //     return this.elements[2];\n  // }\n\n  _setToDefault() {\n    this.elements = [0, 0, 0];\n  }\n\n  /**\n   * Cross product of this with other\n   * @param other\n   * @returns {Vec3}\n   */\n  cross(other: Vec3): Vec3 {\n    return new Vec3(\n      this.y * other.z - this.z * other.y,\n      this.z * other.x - this.x * other.z,\n      this.x * other.y - this.y * other.x\n    );\n  }\n\n  homogenize() {\n    if (this.h === 1 || this.h === 0) {\n      return;\n    }\n    let ooh: number = 1.0 / this.h;\n    this.elements[0] = this.elements[0] * ooh;\n    this.elements[1] = this.elements[1] * ooh;\n    this.h = 1;\n  }\n\n  getHomogenized() {\n    const h = this.clone();\n    h.homogenize();\n    return h;\n  }\n\n  get XY() {\n    return new Vec2(this.x, this.y);\n  }\n\n  get Point2D() {\n    let h = this.getHomogenized();\n    return new Vec2(h.x, h.y);\n  }\n  get Point3DH() {\n    return new Vec4(this.x, this.y, this.z, 1);\n  }\n\n  get Vec3DH() {\n    return new Vec4(this.x, this.y, this.z, 0);\n  }\n\n  static From2DHPoint(p: Vec2) {\n    return new Vec3(p.x, p.y, 1.0);\n  }\n  static FromVec2(p: Vec2) {\n    return new Vec3(p.x, p.y, 0.0);\n  }\n\n  static Random() {\n    var r = new this(Random.floatArray(3));\n    return r;\n  }\n\n  static FromThreeJS(vec: THREE.Vector3) {\n    return new this(vec.x, vec.y, vec.z);\n  }\n\n  sstring(precision?:number) {\n    return `[${this.x.toPrecision(precision)},${this.y.toPrecision(precision)},${this.z.toPrecision(precision)}]`;\n  }\n\n  asThreeJS() {\n    return new THREE.Vector3(this.x, this.y, this.z);\n  }\n\n  getRotatedByQuaternion(q: Quaternion) {\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const qx = -q.x,\n      qy = -q.y,\n      qz = -q.z,\n      qw = q.w;\n\n    // calculate quat * vector\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    let rval = new Vec3();\n    rval.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    rval.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    rval.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return rval;\n  }\n}\n\nexport function V3(...elements: any[]) {\n  return new Vec3(...elements);\n}\n\nfunction _Vec2DH(x: number, y: number) {\n  return new Vec3(x, y, 0);\n}\nfunction _Point2DH(x: number, y: number) {\n  return new Vec3(x, y, 1);\n}\n\nexport function Vec2DH(x: number, y: number): Vec3;\nexport function Vec2DH(vec2: Vec2): Vec3;\nexport function Vec2DH(xy: [number, number]): Vec3;\nexport function Vec2DH(...args: any[]) {\n  if (args[0] instanceof VectorBase) {\n    return _Vec2DH(args[0].x, args[0].y);\n  } else if (Array.isArray(args[0])) {\n    return _Vec2DH(args[0][0], args[0][1]);\n  } else {\n    return _Vec2DH(args[0], args[1]);\n  }\n}\n\nexport function Point2DH(x: number, y: number): Vec3;\nexport function Point2DH(vec2: Vec2): Vec3;\nexport function Point2DH(xy: [number, number]): Vec3;\nexport function Point2DH(...args: any[]) {\n  if (args[0] instanceof VectorBase) {\n    return _Point2DH(args[0].x, args[0].y);\n  } else if (Array.isArray(args[0])) {\n    return _Point2DH(args[0][0], args[0][1]);\n  } else {\n    return _Point2DH(args[0], args[1]);\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}