{"ast":null,"code":"import _initializerDefineProperty from \"/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\nvar _dec, _class, _class2, _descriptor, _descriptor2, _descriptor3;\nimport * as THREE from \"three\";\nimport { AObject, AObjectState } from \"../base\";\nimport { ASerializable } from \"../base\";\n// // http://stackoverflow.com/a/14855016/2207790\n// var loadTextureHTTP = function (url, callback) {\n//     require('request')({\n//         method: 'GET', url: url, encoding: null\n//     }, function(error, response, body) {\n//         if(error) throw error;\n//\n//         var image = new Image;\n//         image.src = body;\n//\n//         var texture = new THREE.Texture(image);\n//         texture.needsUpdate = true;\n//\n//         if (callback) callback(texture);\n//     });\n// };\n\nexport let ATexture = (_dec = ASerializable(\"ATexture\"), _dec(_class = (_class2 = class ATexture extends AObject {\n  /** Get set threejs */\n  set threejs(value) {\n    this._threejs = value;\n  }\n  get threejs() {\n    return this._threejs;\n  }\n  get width() {\n    let w = this.getTexData('width');\n    if (w !== undefined) {\n      return w;\n    } else {\n      return this.threejs.image.width;\n    }\n  }\n  get height() {\n    let h = this.getTexData('height');\n    if (h !== undefined) {\n      return h;\n    } else {\n      return this.threejs.image.height;\n    }\n  }\n  static async LoadAsync(texturePath, name) {\n    let threetexture = await new THREE.TextureLoader().loadAsync(texturePath, function (xhr) {\n      console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n    });\n    return new this(threetexture, name);\n  }\n  constructor(texture, name, ...args) {\n    super();\n    _initializerDefineProperty(this, \"name\", _descriptor, this);\n    _initializerDefineProperty(this, \"_url\", _descriptor2, this);\n    _initializerDefineProperty(this, \"_texdata\", _descriptor3, this);\n    this._threejs = void 0;\n    this._texdata = {};\n    if (texture) {\n      if (texture instanceof THREE.Texture) {\n        this._setTHREETexture(texture);\n      } else {\n        this.loadFromURL(texture);\n      }\n      this.setWrapToRepeat();\n    }\n    if (name) {\n      this.name = name;\n    } else {\n      if (this.threejs instanceof THREE.Texture) {\n        this.name = this.threejs.name;\n      }\n    }\n  }\n  _setTHREETexture(tex) {\n    this.threejs = tex;\n  }\n  setTexData(key, value) {\n    this._texdata[key] = value;\n  }\n  getTexData(key) {\n    return this._texdata[key];\n  }\n  loadFromURL(url) {\n    this._url = url;\n    this.threejs = new THREE.TextureLoader().load(this._url);\n    this.setTexData('url', url);\n  }\n  setWrapToRepeat(repeats) {\n    this.threejs.wrapS = THREE.RepeatWrapping;\n    this.threejs.wrapT = THREE.RepeatWrapping;\n    if (repeats !== undefined) {\n      if (Array.isArray(repeats)) {\n        this.threejs.repeat.set(repeats[0], repeats[1]);\n      } else {\n        this.threejs.repeat.set(repeats, repeats);\n      }\n    }\n  }\n  setWrapToClamp() {\n    this.threejs.wrapS = THREE.ClampToEdgeWrapping;\n    this.threejs.wrapT = THREE.ClampToEdgeWrapping;\n  }\n  setMinFilter(mode) {\n    if (mode) {\n      this.threejs.minFilter = mode;\n    }\n  }\n  setMagFilter(mode) {\n    if (mode) {\n      this.threejs.minFilter = mode;\n    }\n    ;\n  }\n}, _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"name\", [AObjectState], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"_url\", [AObjectState], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"_texdata\", [AObjectState], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);","map":{"version":3,"names":["THREE","AObject","AObjectState","ASerializable","ATexture","_dec","_class","_class2","threejs","value","_threejs","width","w","getTexData","undefined","image","height","h","LoadAsync","texturePath","name","threetexture","TextureLoader","loadAsync","xhr","console","log","loaded","total","constructor","texture","args","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_texdata","Texture","_setTHREETexture","loadFromURL","setWrapToRepeat","tex","setTexData","key","url","_url","load","repeats","wrapS","RepeatWrapping","wrapT","Array","isArray","repeat","set","setWrapToClamp","ClampToEdgeWrapping","setMinFilter","mode","minFilter","setMagFilter","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/rendering/ATexture.ts"],"sourcesContent":["import * as THREE from \"three\";\nimport {AObject, AObjectState} from \"../base\";\nimport {ASerializable} from \"../base\";\nimport type {GenericDict} from \"../basictypes\";\nimport {Color} from \"../math\";\n\n// // http://stackoverflow.com/a/14855016/2207790\n// var loadTextureHTTP = function (url, callback) {\n//     require('request')({\n//         method: 'GET', url: url, encoding: null\n//     }, function(error, response, body) {\n//         if(error) throw error;\n//\n//         var image = new Image;\n//         image.src = body;\n//\n//         var texture = new THREE.Texture(image);\n//         texture.needsUpdate = true;\n//\n//         if (callback) callback(texture);\n//     });\n// };\n\n@ASerializable(\"ATexture\")\nexport class ATexture extends AObject{\n    @AObjectState name!:string;\n    @AObjectState _url!:string;\n    @AObjectState _texdata:GenericDict;\n    public _threejs!:THREE.Texture;\n    /** Get set threejs */\n    set threejs(value:THREE.Texture){this._threejs = value;}\n    get threejs(){return this._threejs;}\n\n    get width():number{\n        let w = this.getTexData('width');\n        if(w!==undefined){\n            return w;\n        }else{\n            return this.threejs.image.width;\n        }\n    }\n    get height():number{\n        let h = this.getTexData('height');\n        if(h!==undefined){\n            return h;\n        }else{\n            return this.threejs.image.height;\n        }\n    }\n\n    static async LoadAsync(texturePath:string, name?:string){\n        let threetexture = await new THREE.TextureLoader().loadAsync(texturePath,\n            function (xhr) {\n                console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n            });\n        return new this(threetexture, name);\n    }\n\n    constructor(texture?:string|THREE.Texture, name?:string, ...args:any[]) {\n        super();\n        this._texdata = {};\n        if(texture) {\n            if (texture instanceof THREE.Texture) {\n                this._setTHREETexture(texture);\n            } else {\n                this.loadFromURL(texture as string);\n            }\n            this.setWrapToRepeat();\n        }\n        if(name){\n            this.name=name;\n        }else{\n            if(this.threejs instanceof THREE.Texture){\n                this.name = this.threejs.name;\n            }\n        }\n\n    }\n\n    _setTHREETexture(tex:THREE.Texture){\n        this.threejs=tex;\n    }\n    setTexData(key:string, value:any){\n        this._texdata[key]=value;\n    }\n    getTexData(key:string){\n        return this._texdata[key];\n    }\n\n    loadFromURL(url:string){\n        this._url = url;\n        this.threejs = new THREE.TextureLoader().load(this._url);\n        this.setTexData('url', url);\n    }\n\n    setWrapToRepeat(repeats?:number|number[]){\n        this.threejs.wrapS=THREE.RepeatWrapping;\n        this.threejs.wrapT=THREE.RepeatWrapping;\n        if(repeats!==undefined) {\n            if (Array.isArray(repeats)) {\n                this.threejs.repeat.set(repeats[0], repeats[1]);\n            } else {\n                this.threejs.repeat.set(repeats, repeats);\n            }\n        }\n    }\n    setWrapToClamp(){\n        this.threejs.wrapS=THREE.ClampToEdgeWrapping;\n        this.threejs.wrapT=THREE.ClampToEdgeWrapping;\n    }\n\n\n    setMinFilter(mode?:THREE.TextureFilter){\n        if(mode){this.threejs.minFilter=mode;}\n    }\n    setMagFilter(mode?:THREE.TextureFilter){\n        if(mode){this.threejs.minFilter=mode};\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}