{"ast":null,"code":"var _dec, _class;\nimport { ASerializable } from \"../../../base\";\nimport { ANodeModel3D } from \"../../../scene\";\nimport { SVGAsset } from \"../SVGAsset\";\nexport let SVGModelEnums = /*#__PURE__*/function (SVGModelEnums) {\n  SVGModelEnums[\"SelfSVGScaleListener\"] = \"SelfSVGScaleListener\";\n  return SVGModelEnums;\n}({});\nexport let ASVGModel = (_dec = ASerializable(\"ASVGModel\"), _dec(_class = class ASVGModel extends ANodeModel3D {\n  // refObject3D!:THREE.Object3D;\n\n  constructor(svgAsset) {\n    super();\n    this.svgAsset = void 0;\n    if (svgAsset !== undefined) {\n      this._setAsset(svgAsset);\n    }\n  }\n  _setAsset(svgAsset) {\n    this.svgAsset = svgAsset;\n    this.geometry.addMember(this.svgAsset);\n  }\n  static FromAsset(svgAsset) {\n    return new this(svgAsset);\n  }\n  static async LoadFromSVG(svgURL) {\n    let svgAsset = await SVGAsset.Load(svgURL);\n    return new this(svgAsset);\n  }\n  getBounds() {\n    // let b = this._svgBounds.clone();\n    // let threebox = new THREE.Box3().setFromObject(this.refObject3D);\n    return this.geometry.getBounds();\n    // let bounds = new BoundingBox3D()\n    // bounds.minPoint=V3(threebox.min.x, threebox.min.y, threebox.min.z);\n    // bounds.maxPoint=V3(threebox.max.x, threebox.max.y, threebox.max.z);\n    // bounds.transform = this.transform;\n    //     // this.getWorldTransform();\n    // return bounds;\n  }\n}) || _class);","map":{"version":3,"names":["ASerializable","ANodeModel3D","SVGAsset","SVGModelEnums","ASVGModel","_dec","_class","constructor","svgAsset","undefined","_setAsset","geometry","addMember","FromAsset","LoadFromSVG","svgURL","Load","getBounds"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/fileio/svg/node/ASVGModel.ts"],"sourcesContent":["import {AObjectState, ASerializable} from \"../../../base\";\nimport {ANodeModel, ANodeModel3D} from \"../../../scene\";\nimport {SVGLoader, SVGParsedData} from \"../SVGLoader\";\nimport {SvgToThreeJsObject, ThreeJSObjectFromParsedSVG} from \"../SvgToThreeJsObject\";\nimport * as THREE from \"three\";\nimport {Mat3, Mat4, V3} from \"../../../math\";\nimport {BoundingBox3D} from \"../../../geometry\";\nimport {FileLoader} from \"three\";\nimport {SVGAsset} from \"../SVGAsset\";\n\nexport enum SVGModelEnums{\n    SelfSVGScaleListener = 'SelfSVGScaleListener'\n}\n\n@ASerializable(\"ASVGModel\")\nexport class ASVGModel extends ANodeModel3D {\n    svgAsset!:SVGAsset;\n    // refObject3D!:THREE.Object3D;\n\n    constructor(svgAsset?:SVGAsset) {\n        super();\n        if(svgAsset !== undefined){\n            this._setAsset(svgAsset);\n        }\n    }\n\n    _setAsset(svgAsset:SVGAsset){\n        this.svgAsset=svgAsset;\n        this.geometry.addMember(this.svgAsset);\n    }\n\n    static FromAsset(svgAsset:SVGAsset){\n        return new this(svgAsset);\n    }\n\n    static async LoadFromSVG(svgURL:string){\n        let svgAsset:SVGAsset = await SVGAsset.Load(svgURL);\n        return new this(svgAsset);\n    }\n\n    getBounds():BoundingBox3D{\n        // let b = this._svgBounds.clone();\n        // let threebox = new THREE.Box3().setFromObject(this.refObject3D);\n        return this.geometry.getBounds();\n        // let bounds = new BoundingBox3D()\n        // bounds.minPoint=V3(threebox.min.x, threebox.min.y, threebox.min.z);\n        // bounds.maxPoint=V3(threebox.max.x, threebox.max.y, threebox.max.z);\n        // bounds.transform = this.transform;\n        //     // this.getWorldTransform();\n        // return bounds;\n    }\n}\n"],"mappings":";AAAA,SAAsBA,aAAa,QAAO,eAAe;AACzD,SAAoBC,YAAY,QAAO,gBAAgB;AAOvD,SAAQC,QAAQ,QAAO,aAAa;AAEpC,WAAYC,aAAa,0BAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAIzB,WACaC,SAAS,IAAAC,IAAA,GADrBL,aAAa,CAAC,WAAW,CAAC,EAAAK,IAAA,CAAAC,MAAA,GAA3B,MACaF,SAAS,SAASH,YAAY,CAAC;EAExC;;EAEAM,WAAWA,CAACC,QAAkB,EAAE;IAC5B,KAAK,CAAC,CAAC;IAAC,KAJZA,QAAQ;IAKJ,IAAGA,QAAQ,KAAKC,SAAS,EAAC;MACtB,IAAI,CAACC,SAAS,CAACF,QAAQ,CAAC;IAC5B;EACJ;EAEAE,SAASA,CAACF,QAAiB,EAAC;IACxB,IAAI,CAACA,QAAQ,GAACA,QAAQ;IACtB,IAAI,CAACG,QAAQ,CAACC,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAAC;EAC1C;EAEA,OAAOK,SAASA,CAACL,QAAiB,EAAC;IAC/B,OAAO,IAAI,IAAI,CAACA,QAAQ,CAAC;EAC7B;EAEA,aAAaM,WAAWA,CAACC,MAAa,EAAC;IACnC,IAAIP,QAAiB,GAAG,MAAMN,QAAQ,CAACc,IAAI,CAACD,MAAM,CAAC;IACnD,OAAO,IAAI,IAAI,CAACP,QAAQ,CAAC;EAC7B;EAEAS,SAASA,CAAA,EAAgB;IACrB;IACA;IACA,OAAO,IAAI,CAACN,QAAQ,CAACM,SAAS,CAAC,CAAC;IAChC;IACA;IACA;IACA;IACA;IACA;EACJ;AACJ,CAAC,KAAAX,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}