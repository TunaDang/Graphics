{"ast":null,"code":"var _dec, _class;\nimport * as THREE from \"three\";\nimport { Mat3, Mat4 } from \"../../math\";\nimport { ASerializable } from \"../../base\";\nexport let AGraphicObject = (_dec = ASerializable(\"AGraphicObject\"), _dec(_class = class AGraphicObject {\n  /**\n   * This should be what is added to the threejs scenevis\n   */\n\n  onMaterialUpdate(newMaterial, ...args) {\n    // console.log(\"Material Update!\")\n  }\n  onMaterialChange(newMaterial, ...args) {\n    if (this.threejs instanceof THREE.Mesh) {\n      this.threejs.material = newMaterial._material;\n    }\n  }\n  setColor(color) {}\n  setObject3DName(name) {\n    this.threejs.name = name;\n  }\n\n  /**\n   * This should be whatever receives events\n   */\n  // get eventHandler(){return this.threejs;}\n\n  setMatrix(mat) {\n    if (mat instanceof Mat3) {\n      Mat4.From2DMat3(mat).assignTo(this.threejs.matrix);\n      ;\n    } else {\n      mat.assignTo(this.threejs.matrix);\n    }\n  }\n  getMatrix() {\n    return;\n    Mat4.FromThreeJS(this.threejs.matrix);\n  }\n  get uid() {\n    return this.threejs.uuid;\n  }\n  add(toAdd) {\n    this.threejs.add(toAdd.threejs);\n  }\n  remove(toRemove) {\n    this.threejs.remove(toRemove.threejs);\n  }\n  get serializationLabel() {\n    // @ts-ignore\n    return this.constructor._serializationLabel;\n  }\n\n  /** Get set visible */\n  set visible(value) {\n    this.threejs.visible = value;\n  }\n  get visible() {\n    return this.threejs.visible;\n  }\n  setTransform(T) {\n    let mat = T.getMatrix();\n    if (mat instanceof Mat3) {\n      mat = Mat4.From2DMat3(mat);\n    }\n    mat.assignTo(this.threejs.matrix);\n  }\n  setTransform2D(T, depth) {\n    let mat = T.getMatrix();\n    if (mat instanceof Mat3) {\n      mat = Mat4.From2DMat3(mat);\n    }\n    mat.elements[11] = depth;\n    mat.assignTo(this.threejs.matrix);\n  }\n  dispose() {\n    if (this.threejs) {\n      var _this$threejs$parent;\n      // this._mesh.dispose();\n      (_this$threejs$parent = this.threejs.parent) === null || _this$threejs$parent === void 0 ? void 0 : _this$threejs$parent.remove(this.threejs);\n    }\n  }\n}) || _class);","map":{"version":3,"names":["THREE","Mat3","Mat4","ASerializable","AGraphicObject","_dec","_class","onMaterialUpdate","newMaterial","args","onMaterialChange","threejs","Mesh","material","_material","setColor","color","setObject3DName","name","setMatrix","mat","From2DMat3","assignTo","matrix","getMatrix","FromThreeJS","uid","uuid","add","toAdd","remove","toRemove","serializationLabel","constructor","_serializationLabel","visible","value","setTransform","T","setTransform2D","depth","elements","dispose","_this$threejs$parent","parent"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/rendering/graphicobject/AGraphicObject.ts"],"sourcesContent":["import * as THREE from \"three\";\nimport {Color, Mat3, Mat4, TransformationInterface, Vec3} from \"../../math\";\nimport {AMaterial} from \"../material\";\nimport {ASerializable} from \"../../base\";\n\nexport interface HasThreeJSObject{\n    threejs:THREE.Object3D;\n}\n\n\n@ASerializable(\"AGraphicObject\")\nexport abstract class AGraphicObject implements HasThreeJSObject{\n    /**\n     * This should be what is added to the threejs scenevis\n     */\n    abstract get threejs():THREE.Object3D;\n\n    onMaterialUpdate(newMaterial:AMaterial, ...args:any[]){\n        // console.log(\"Material Update!\")\n    }\n    onMaterialChange(newMaterial:AMaterial, ...args:any[]){\n        if(this.threejs instanceof THREE.Mesh){\n            (this.threejs as THREE.Mesh).material = newMaterial._material;\n        }\n    }\n    setColor(color:Color){\n    }\n\n\n    setObject3DName(name:string){\n        this.threejs.name = name;\n    }\n\n    /**\n     * This should be whatever receives events\n     */\n    // get eventHandler(){return this.threejs;}\n\n    setMatrix(mat:Mat3|Mat4){\n        if(mat instanceof Mat3){\n            Mat4.From2DMat3(mat).assignTo(this.threejs.matrix);;\n        }else{\n            mat.assignTo(this.threejs.matrix);\n        }\n\n    }\n\n    getMatrix(){return\n        Mat4.FromThreeJS(this.threejs.matrix);\n    }\n\n    get uid(){\n        return this.threejs.uuid;\n    }\n\n    add(toAdd:AGraphicObject){\n        this.threejs.add(toAdd.threejs);\n    }\n    remove(toRemove:AGraphicObject){\n        this.threejs.remove(toRemove.threejs);\n    }\n\n    get serializationLabel(){\n        // @ts-ignore\n        return this.constructor._serializationLabel\n    }\n\n    /** Get set visible */\n    set visible(value){this.threejs.visible = value;}\n    get visible(){return this.threejs.visible;}\n\n    public setTransform(T:TransformationInterface){\n        let mat = T.getMatrix();\n        if(mat instanceof Mat3){\n            mat = Mat4.From2DMat3(mat);\n        }\n        (mat as Mat4).assignTo(this.threejs.matrix);\n    };\n\n    public setTransform2D(T:TransformationInterface, depth:number){\n        let mat = T.getMatrix();\n        if(mat instanceof Mat3){\n            mat = Mat4.From2DMat3(mat);\n        }\n        mat.elements[11]=depth;\n        (mat as Mat4).assignTo(this.threejs.matrix);\n    };\n\n    dispose(){\n        if(this.threejs){\n            // this._mesh.dispose();\n            this.threejs.parent?.remove(this.threejs);\n        }\n\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}