{"ast":null,"code":"var _dec, _class;\nimport { AObject, ASerializable } from \"../../base\";\nimport * as THREE from \"three\";\nimport { ATexture } from \"../ATexture\";\nexport let ARenderTarget = (_dec = ASerializable(\"ARenderTarget\"), _dec(_class = class ARenderTarget extends AObject {\n  useAsRenderTarget(renderer) {\n    renderer.setRenderTarget(this.target);\n  }\n  render(renderer, scene, camera) {\n    this.useAsRenderTarget(renderer);\n    renderer.render(scene, camera);\n  }\n  get target() {\n    return this._target;\n  }\n  get targetTexture() {\n    return this._targetTexture;\n  }\n  set target(target) {\n    this._target = target;\n    if (this._target) {\n      this._targetTexture = new ATexture(this._target.texture);\n    }\n  }\n  static CreateFloatRGBATarget(width, height) {\n    return new ARenderTarget(width, height, {\n      format: THREE.RGBAFormat,\n      type: THREE.FloatType\n    });\n  }\n  constructor(width, height, options) {\n    super();\n    this.name = void 0;\n    this._target = null;\n    this._targetTexture = void 0;\n    let defaultOptions = {\n      format: THREE.RGBAFormat,\n      type: THREE.FloatType,\n      magFilter: THREE.LinearFilter,\n      minFilter: THREE.LinearMipmapLinearFilter\n    };\n    let op = defaultOptions;\n    if (options) {\n      op = {\n        ...op,\n        ...options\n      };\n    }\n    this.target = new THREE.WebGLRenderTarget(width, height, {\n      ...op\n    });\n    this.targetTexture.setMinFilter(op[\"minFilter\"]);\n    this.targetTexture.setMagFilter(op[\"magFilter\"]);\n  }\n  GetTargetPixels(renderer) {\n    let target = this.target;\n    if (target === null) {\n      return;\n    }\n    // let pixels = new Uint8Array(target.width * target.height * 4);\n    let pixels = new Float32Array(target.width * target.height * 4);\n    renderer.readRenderTargetPixels(target, 0, 0, target.width, target.height, pixels);\n    return pixels;\n  }\n  dispose() {\n    if (this.target) {\n      this.target.dispose();\n    }\n    super.release();\n  }\n}) || _class);","map":{"version":3,"names":["AObject","ASerializable","THREE","ATexture","ARenderTarget","_dec","_class","useAsRenderTarget","renderer","setRenderTarget","target","render","scene","camera","_target","targetTexture","_targetTexture","texture","CreateFloatRGBATarget","width","height","format","RGBAFormat","type","FloatType","constructor","options","name","defaultOptions","magFilter","LinearFilter","minFilter","LinearMipmapLinearFilter","op","WebGLRenderTarget","setMinFilter","setMagFilter","GetTargetPixels","pixels","Float32Array","readRenderTargetPixels","dispose","release"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/rendering/multipass/ARenderTarget.ts"],"sourcesContent":["import {AObject, ASerializable} from \"../../base\";\nimport * as THREE from \"three\";\nimport {ATexture} from \"../ATexture\";\nimport type {WebGLRenderTargetOptions} from \"three/src/renderers/WebGLRenderTarget\";\nimport {RenderTargetInterface} from \"../../scene\";\n\n\n@ASerializable(\"ARenderTarget\")\nexport class ARenderTarget extends AObject implements RenderTargetInterface{\n    name!: string;\n    _target: THREE.WebGLRenderTarget | null = null;\n    _targetTexture!:ATexture;\n\n\n    useAsRenderTarget(renderer: THREE.WebGLRenderer){\n        renderer.setRenderTarget(this.target);\n    }\n\n    render(renderer: THREE.WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera) {\n        this.useAsRenderTarget(renderer);\n        renderer.render(scene, camera);\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get targetTexture(){\n        return this._targetTexture;\n    }\n\n    set target(target: THREE.WebGLRenderTarget | null) {\n        this._target = target;\n        if (this._target) {\n            this._targetTexture = new ATexture(this._target.texture);\n        }\n    }\n\n    static CreateFloatRGBATarget(width:number, height:number){\n        return new ARenderTarget(width, height, {\n            format: THREE.RGBAFormat,\n            type: THREE.FloatType,\n        })\n    }\n\n    constructor(width:number, height:number, options?:WebGLRenderTargetOptions) {\n        super();\n        let defaultOptions = {\n            format: THREE.RGBAFormat,\n            type: THREE.FloatType,\n            magFilter: THREE.LinearFilter,\n            minFilter: THREE.LinearMipmapLinearFilter\n        }\n        let op = defaultOptions;\n        if(options){\n            op = {...op, ...options};\n        }\n        this.target = new THREE.WebGLRenderTarget(width, height, {...op});\n        this.targetTexture.setMinFilter(op[\"minFilter\"])\n        this.targetTexture.setMagFilter(op[\"magFilter\"]);\n    }\n\n    GetTargetPixels(renderer: THREE.WebGLRenderer) {\n        let target = this.target;\n        if (target === null) {\n            return;\n        }\n        // let pixels = new Uint8Array(target.width * target.height * 4);\n        let pixels = new Float32Array(target.width * target.height * 4)\n        renderer.readRenderTargetPixels(target, 0, 0, target.width, target.height, pixels);\n        return pixels;\n    }\n\n    dispose() {\n        if (this.target) {\n            this.target.dispose();\n        }\n        super.release();\n    }\n\n\n\n\n\n}\n"],"mappings":";AAAA,SAAQA,OAAO,EAAEC,aAAa,QAAO,YAAY;AACjD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAAQC,QAAQ,QAAO,aAAa;AAKpC,WACaC,aAAa,IAAAC,IAAA,GADzBJ,aAAa,CAAC,eAAe,CAAC,EAAAI,IAAA,CAAAC,MAAA,GAA/B,MACaF,aAAa,SAASJ,OAAO,CAAiC;EAMvEO,iBAAiBA,CAACC,QAA6B,EAAC;IAC5CA,QAAQ,CAACC,eAAe,CAAC,IAAI,CAACC,MAAM,CAAC;EACzC;EAEAC,MAAMA,CAACH,QAA6B,EAAEI,KAAkB,EAAEC,MAAoB,EAAE;IAC5E,IAAI,CAACN,iBAAiB,CAACC,QAAQ,CAAC;IAChCA,QAAQ,CAACG,MAAM,CAACC,KAAK,EAAEC,MAAM,CAAC;EAClC;EAEA,IAAIH,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACI,OAAO;EACvB;EAEA,IAAIC,aAAaA,CAAA,EAAE;IACf,OAAO,IAAI,CAACC,cAAc;EAC9B;EAEA,IAAIN,MAAMA,CAACA,MAAsC,EAAE;IAC/C,IAAI,CAACI,OAAO,GAAGJ,MAAM;IACrB,IAAI,IAAI,CAACI,OAAO,EAAE;MACd,IAAI,CAACE,cAAc,GAAG,IAAIb,QAAQ,CAAC,IAAI,CAACW,OAAO,CAACG,OAAO,CAAC;IAC5D;EACJ;EAEA,OAAOC,qBAAqBA,CAACC,KAAY,EAAEC,MAAa,EAAC;IACrD,OAAO,IAAIhB,aAAa,CAACe,KAAK,EAAEC,MAAM,EAAE;MACpCC,MAAM,EAAEnB,KAAK,CAACoB,UAAU;MACxBC,IAAI,EAAErB,KAAK,CAACsB;IAChB,CAAC,CAAC;EACN;EAEAC,WAAWA,CAACN,KAAY,EAAEC,MAAa,EAAEM,OAAiC,EAAE;IACxE,KAAK,CAAC,CAAC;IAAC,KArCZC,IAAI;IAAA,KACJb,OAAO,GAAmC,IAAI;IAAA,KAC9CE,cAAc;IAoCV,IAAIY,cAAc,GAAG;MACjBP,MAAM,EAAEnB,KAAK,CAACoB,UAAU;MACxBC,IAAI,EAAErB,KAAK,CAACsB,SAAS;MACrBK,SAAS,EAAE3B,KAAK,CAAC4B,YAAY;MAC7BC,SAAS,EAAE7B,KAAK,CAAC8B;IACrB,CAAC;IACD,IAAIC,EAAE,GAAGL,cAAc;IACvB,IAAGF,OAAO,EAAC;MACPO,EAAE,GAAG;QAAC,GAAGA,EAAE;QAAE,GAAGP;MAAO,CAAC;IAC5B;IACA,IAAI,CAAChB,MAAM,GAAG,IAAIR,KAAK,CAACgC,iBAAiB,CAACf,KAAK,EAAEC,MAAM,EAAE;MAAC,GAAGa;IAAE,CAAC,CAAC;IACjE,IAAI,CAAClB,aAAa,CAACoB,YAAY,CAACF,EAAE,CAAC,WAAW,CAAC,CAAC;IAChD,IAAI,CAAClB,aAAa,CAACqB,YAAY,CAACH,EAAE,CAAC,WAAW,CAAC,CAAC;EACpD;EAEAI,eAAeA,CAAC7B,QAA6B,EAAE;IAC3C,IAAIE,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIA,MAAM,KAAK,IAAI,EAAE;MACjB;IACJ;IACA;IACA,IAAI4B,MAAM,GAAG,IAAIC,YAAY,CAAC7B,MAAM,CAACS,KAAK,GAAGT,MAAM,CAACU,MAAM,GAAG,CAAC,CAAC;IAC/DZ,QAAQ,CAACgC,sBAAsB,CAAC9B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAEA,MAAM,CAACS,KAAK,EAAET,MAAM,CAACU,MAAM,EAAEkB,MAAM,CAAC;IAClF,OAAOA,MAAM;EACjB;EAEAG,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAAC/B,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAAC+B,OAAO,CAAC,CAAC;IACzB;IACA,KAAK,CAACC,OAAO,CAAC,CAAC;EACnB;AAMJ,CAAC,KAAApC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}