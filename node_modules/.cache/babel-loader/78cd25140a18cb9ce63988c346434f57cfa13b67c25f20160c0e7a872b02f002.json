{"ast":null,"code":"var _dec, _class, _Color;\nimport * as THREE from \"three\";\nimport tinycolor from \"tinycolor2\";\nimport { ASerializable } from \"../base\";\nimport { Random } from \"./Random\";\nimport { VectorBase, Vec4 } from \"./linalg\";\nexport let Color = (_dec = ASerializable(\"Color\"), _dec(_class = (_Color = class Color extends VectorBase {\n  constructor(...args) {\n    // common logic constructor\n    super(...args);\n  }\n  toString() {\n    return `Color(${this.r},${this.g},${this.b},${this.a})`;\n  }\n  get nDimensions() {\n    return 4;\n  }\n  asThreeJS() {\n    return new THREE.Color(this.r, this.g, this.b);\n  }\n  get rgba() {\n    if (this.elements.length === 4) {\n      return this.elements;\n    } else {\n      return [this.elements[0], this.elements[1], this.elements[2], 1.0];\n    }\n  }\n  get RGBuintAfloat() {\n    return {\n      r: this.elements[0] * 256,\n      g: this.elements[1] * 256,\n      b: this.elements[2] * 256,\n      a: this.a\n    };\n  }\n  static White() {\n    return new Color(1.0, 1.0, 1.0);\n  }\n  static Black() {\n    return new Color(0, 0, 0);\n  }\n  static Red() {\n    return new Color(1.0, 0.0, 0.0);\n  }\n  static Green() {\n    return new Color(0.0, 1.0, 0.0);\n  }\n  static Blue() {\n    return new Color(0.0, 0.0, 1.0);\n  }\n  static FromRGBuintAfloat(r, g, b, a) {\n    let c = new Color(0, 0, 0);\n    c.setRGBuintAfloat(r, g, b, a);\n    return c;\n  }\n  setRGBuintAfloat(...args) {\n    let rgba = [0, 0, 0, 0];\n    if (typeof args[0] == \"number\") {\n      rgba[0] = args[0];\n      rgba[1] = args[1];\n      rgba[2] = args[2];\n      rgba[3] = args[3];\n    } else {\n      let r = args[0];\n      rgba = [r.r, r.g, r.b, r.a];\n    }\n    this.elements[0] = rgba[0] / 256;\n    this.elements[1] = rgba[1] / 256;\n    this.elements[2] = rgba[2] / 256;\n    if (this.elements.length < 4) {\n      this.elements.push(rgba[3]);\n    } else {\n      this.elements[3] = rgba[3];\n    }\n  }\n\n  /** Get set r */\n  set r(value) {\n    this.elements[0] = value;\n  }\n  get r() {\n    return this.elements[0];\n  }\n\n  /** Get set g */\n  set g(value) {\n    this.elements[1] = value;\n  }\n  get g() {\n    return this.elements[1];\n  }\n\n  /** Get set b */\n  set b(value) {\n    this.elements[2] = value;\n  }\n  get b() {\n    return this.elements[2];\n  }\n\n  /** Get set a */\n  set a(value) {\n    if (this.elements.length === 3) {\n      this.elements.push(value);\n    } else {\n      this.elements[3] = value;\n    }\n  }\n  get a() {\n    if (this.elements.length > 3) {\n      return this.elements[3];\n    } else {\n      return 1.0;\n    }\n  }\n  _setToDefault() {\n    this.elements = [0.5, 0.5, 0.5];\n  }\n  static RandomRGBA() {\n    return new Color(Math.random(), Math.random(), Math.random(), Math.random());\n  }\n\n  // static FromRGBA(r:number|number[],g?:number,b?:number,a:number=1){\n\n  static FromRGBA(...args) {\n    let rgba = args;\n    if (Array.isArray(args[0])) {\n      rgba = rgba[0];\n    }\n    return new Color(rgba[0], rgba[1], rgba[2], rgba.length > 3 ? rgba[3] : 1);\n  }\n  static FromTHREEVector4(vector4) {\n    return new Color(vector4.x, vector4.y, vector4.z, vector4.w);\n  }\n  static Random() {\n    var r = new this(Random.floatArray(3));\n    return r;\n  }\n  static FromThreeJS(threecolor) {\n    return new this(threecolor.r, threecolor.g, threecolor.b);\n  }\n  static FromTinyColor(tc) {\n    let rgba = tc.toRgb();\n    if (rgba.a === 1) {\n      return new Color(rgba.r / 255, rgba.g / 255, rgba.b / 255);\n    } else {\n      return new Color(rgba.r / 255, rgba.g / 255, rgba.b / 255, rgba.a);\n    }\n  }\n  sstring() {\n    return `[${this.r},${this.g},${this.b}]`;\n  }\n  toHexString() {\n    return this._tinycolor().toHexString();\n  }\n  toHex() {\n    return parseInt(this._tinycolor().toHex(), 16);\n  }\n  get Vec4() {\n    return new Vec4(this.r, this.g, this.b, this.a);\n  }\n\n  /**\n   * Get new color with spun hue\n   * @param degrees\n   * @returns {Color}\n   * @constructor\n   */\n  GetSpun(angle) {\n    let spuntc = this._tinycolor().spin(angle * 180 / Math.PI);\n    let rval = Color.FromTinyColor(spuntc);\n    return rval;\n  }\n  GetDesaturated(percent) {\n    let dst = this._tinycolor().desaturate(percent);\n    let rval = Color.FromTinyColor(dst);\n    return rval;\n  }\n  GetDarkened(percent) {\n    let dst = this._tinycolor().darken(percent);\n    let rval = Color.FromTinyColor(dst);\n    return rval;\n  }\n  static FromHSVA(h, s, v, a) {\n    var rgbob = tinycolor(`hsv(${parseInt(String(h * 100))}%, ${parseInt(String(s * 100))}%, ${parseInt(String(v * 100))}%)`).toRgb();\n    if (a !== undefined) {\n      return new Color(rgbob.r / 255, rgbob.g / 255, rgbob.b / 255, a);\n    } else {\n      return new Color(rgbob.r / 255, rgbob.g / 255, rgbob.b / 255);\n    }\n  }\n  static FromString(colorString, alpha) {\n    var tcolor = tinycolor(colorString).toRgb();\n    return new Color(tcolor.r / 256, tcolor.g / 256, tcolor.b / 256, alpha !== null && alpha !== void 0 ? alpha : tcolor.a);\n  }\n  static ThreeJS(r, g, b) {\n    if (typeof r === \"string\") {\n      let c = Color.FromString(r);\n      return new THREE.Color(c.r, c.b, c.g);\n    }\n    if (g === undefined || b === undefined) {\n      return new THREE.Color(r);\n    } else {\n      return new THREE.Color(r, g, b);\n    }\n  }\n  _tinycolor() {\n    return tinycolor(this.RGBuintAfloat);\n  }\n  toRGBAString() {\n    return this._tinycolor().toRgbString();\n  }\n}, _Color.N_DIMENSIONS = 4, _Color)) || _class);","map":{"version":3,"names":["THREE","tinycolor","ASerializable","Random","VectorBase","Vec4","Color","_dec","_class","_Color","constructor","args","toString","r","g","b","a","nDimensions","asThreeJS","rgba","elements","length","RGBuintAfloat","White","Black","Red","Green","Blue","FromRGBuintAfloat","c","setRGBuintAfloat","push","value","_setToDefault","RandomRGBA","Math","random","FromRGBA","Array","isArray","FromTHREEVector4","vector4","x","y","z","w","floatArray","FromThreeJS","threecolor","FromTinyColor","tc","toRgb","sstring","toHexString","_tinycolor","toHex","parseInt","GetSpun","angle","spuntc","spin","PI","rval","GetDesaturated","percent","dst","desaturate","GetDarkened","darken","FromHSVA","h","s","v","rgbob","String","undefined","FromString","colorString","alpha","tcolor","ThreeJS","toRGBAString","toRgbString","N_DIMENSIONS"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/math/Color.ts"],"sourcesContent":["import * as THREE from \"three\";\nimport tinycolor from \"tinycolor2\";\nimport {ASerializable} from \"../base\";\nimport {Random} from \"./Random\";\nimport {VectorBase, Vec4, Vec3} from \"./linalg\";\n\ninterface TinyColor {\n    toRgb(): tinycolor.ColorFormats.RGBA;\n}\n\n@ASerializable(\"Color\")\nexport class Color extends VectorBase {\n    static N_DIMENSIONS: number = 4;\n\n    public constructor(r: number, g: number, b: number, a?: number);\n    public constructor(rgb: Array<number>);\n    public constructor(...args: Array<any>) {\n        // common logic constructor\n        super(...args);\n    }\n\n    toString() {\n        return `Color(${this.r},${this.g},${this.b},${this.a})`;\n    }\n\n    get nDimensions() {\n        return 4;\n    }\n\n    public asThreeJS() {\n        return new THREE.Color(this.r, this.g, this.b);\n    }\n\n    get rgba() {\n        if (this.elements.length === 4) {\n            return this.elements;\n        } else {\n            return [this.elements[0], this.elements[1], this.elements[2], 1.0];\n        }\n    }\n\n    get RGBuintAfloat() {\n        return {\n            r: this.elements[0] * 256,\n            g: this.elements[1] * 256,\n            b: this.elements[2] * 256,\n            a: this.a,\n        };\n    }\n\n    static White(){\n        return new Color(1.0,1.0,1.0);\n    }\n    static Black(){\n        return new Color(0,0,0);\n    }\n\n    static Red(){\n        return new Color(1.0, 0.0, 0.0);\n    }\n\n    static Green(){\n        return new Color(0.0, 1.0, 0.0);\n    }\n\n    static Blue(){\n        return new Color(0.0, 0.0, 1.0);\n    }\n\n    static FromRGBuintAfloat(\n        r: number | { [name: string]: number },\n        g?: number,\n        b?: number,\n        a?: number\n    ) {\n        let c = new Color(0, 0, 0);\n        c.setRGBuintAfloat(r, g, b, a);\n        return c;\n    }\n\n    setRGBuintAfloat(\n        r: number | { [name: string]: number },\n        g?: number,\n        b?: number,\n        a?: number\n    ): void;\n    setRGBuintAfloat(...args: any[]) {\n        let rgba = [0, 0, 0, 0];\n        if (typeof args[0] == \"number\") {\n            rgba[0] = args[0];\n            rgba[1] = args[1];\n            rgba[2] = args[2];\n            rgba[3] = args[3];\n        } else {\n            let r = args[0] as unknown as { [name: string]: number };\n            rgba = [r.r, r.g, r.b, r.a];\n        }\n        this.elements[0] = rgba[0] / 256;\n        this.elements[1] = rgba[1] / 256;\n        this.elements[2] = rgba[2] / 256;\n        if (this.elements.length < 4) {\n            this.elements.push(rgba[3]);\n        } else {\n            this.elements[3] = rgba[3];\n        }\n    }\n\n    /** Get set r */\n    set r(value) {\n        this.elements[0] = value;\n    }\n\n    get r() {\n        return this.elements[0];\n    }\n\n    /** Get set g */\n    set g(value) {\n        this.elements[1] = value;\n    }\n\n    get g() {\n        return this.elements[1];\n    }\n\n    /** Get set b */\n    set b(value) {\n        this.elements[2] = value;\n    }\n\n    get b() {\n        return this.elements[2];\n    }\n\n    /** Get set a */\n    set a(value) {\n        if (this.elements.length === 3) {\n            this.elements.push(value);\n        } else {\n            this.elements[3] = value;\n        }\n    }\n\n    get a() {\n        if (this.elements.length > 3) {\n            return this.elements[3];\n        } else {\n            return 1.0;\n        }\n    }\n\n    _setToDefault() {\n        this.elements = [0.5, 0.5, 0.5];\n    }\n\n    static RandomRGBA() {\n        return new Color(\n            Math.random(),\n            Math.random(),\n            Math.random(),\n            Math.random()\n        );\n    }\n\n    // static FromRGBA(r:number|number[],g?:number,b?:number,a:number=1){\n    static FromRGBA(r: number, g: number, b: number, a?: number): Color;\n    static FromRGBA(rbga: number[]): Color;\n    static FromRGBA(...args: any[]) {\n        let rgba = args;\n        if (Array.isArray(args[0])) {\n            rgba = rgba[0];\n        }\n        return new Color(rgba[0], rgba[1], rgba[2], rgba.length > 3 ? rgba[3] : 1);\n    }\n\n    static FromTHREEVector4(vector4: THREE.Vector4) {\n        return new Color(vector4.x, vector4.y, vector4.z, vector4.w);\n    }\n\n    static Random() {\n        var r = new this(Random.floatArray(3));\n        return r;\n    }\n\n    static FromThreeJS(threecolor: THREE.Color) {\n        return new this(threecolor.r, threecolor.g, threecolor.b);\n    }\n\n    static FromTinyColor(tc: TinyColor) {\n        let rgba = tc.toRgb();\n        if (rgba.a === 1) {\n            return new Color(rgba.r / 255, rgba.g / 255, rgba.b / 255);\n        } else {\n            return new Color(rgba.r / 255, rgba.g / 255, rgba.b / 255, rgba.a);\n        }\n    }\n\n    sstring() {\n        return `[${this.r},${this.g},${this.b}]`;\n    }\n\n    toHexString() {\n        return this._tinycolor().toHexString();\n    }\n\n\n\n    toHex() {\n        return parseInt(this._tinycolor().toHex(), 16);\n    }\n\n    get Vec4() {\n        return new Vec4(this.r, this.g, this.b, this.a);\n    }\n\n    /**\n     * Get new color with spun hue\n     * @param degrees\n     * @returns {Color}\n     * @constructor\n     */\n    GetSpun(angle: number): Color {\n        let spuntc = this._tinycolor().spin((angle * 180) / Math.PI);\n        let rval = Color.FromTinyColor(spuntc);\n        return rval;\n    }\n\n    GetDesaturated(percent: number): Color {\n        let dst = this._tinycolor().desaturate(percent);\n        let rval = Color.FromTinyColor(dst);\n        return rval;\n    }\n\n    GetDarkened(percent: number): Color {\n        let dst = this._tinycolor().darken(percent);\n        let rval = Color.FromTinyColor(dst);\n        return rval;\n    }\n\n    static FromHSVA(h: number, s: number, v: number, a?: number) {\n        var rgbob = tinycolor(\n            `hsv(${parseInt(String(h * 100))}%, ${parseInt(\n                String(s * 100)\n            )}%, ${parseInt(String(v * 100))}%)`\n        ).toRgb();\n        if (a !== undefined) {\n            return new Color(rgbob.r / 255, rgbob.g / 255, rgbob.b / 255, a);\n        } else {\n            return new Color(rgbob.r / 255, rgbob.g / 255, rgbob.b / 255);\n        }\n    }\n\n    static FromString(colorString: string, alpha?: number) {\n        var tcolor = tinycolor(colorString).toRgb();\n        return new Color(\n            tcolor.r / 256,\n            tcolor.g / 256,\n            tcolor.b / 256,\n            alpha ?? tcolor.a\n        );\n    }\n\n    static ThreeJS(hexstring: string): THREE.Color;\n    static ThreeJS(hex: number): THREE.Color;\n    static ThreeJS(r: number | string, g?: number, b?: number): THREE.Color {\n        if (typeof r === \"string\") {\n            let c = Color.FromString(r);\n            return new THREE.Color(c.r, c.b, c.g);\n        }\n        if (g === undefined || b === undefined) {\n            return new THREE.Color(r);\n        } else {\n            return new THREE.Color(r, g, b);\n        }\n    }\n\n    _tinycolor() {\n        return tinycolor(this.RGBuintAfloat);\n    }\n\n    toRGBAString() {\n        return this._tinycolor().toRgbString();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}