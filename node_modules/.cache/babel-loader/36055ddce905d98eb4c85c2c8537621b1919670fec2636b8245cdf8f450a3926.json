{"ast":null,"code":"import { ASVGGraphic, ASVGView, Color } from \"../../../anigraph\";\nexport class VehicleView extends ASVGView {\n  constructor(...args) {\n    super(...args);\n    this._model = void 0;\n    this.svgGraphic = void 0;\n  }\n  get model() {\n    return this._model;\n  }\n  static Create(model, color, ...args) {\n    var _color;\n    color = (_color = color) !== null && _color !== void 0 ? _color : Color.Random();\n    let view = new VehicleView();\n    view.setModel(model);\n    view.setCarColor(color);\n    return view;\n  }\n  init() {\n    this.svgGraphic = ASVGGraphic.Create(this.model.svgAsset, true);\n    this.registerAndAddGraphic(this.svgGraphic);\n    if (this.model.color) {\n      this.setCarColor(this.model.color);\n    }\n  }\n  setCarColor(color) {\n    this.svgGraphic.setElementColor(\"carbody\", color);\n  }\n  update() {\n    this.svgGraphic.setTransform2D(this.model.matrix2DH, 1);\n  }\n}","map":{"version":3,"names":["ASVGGraphic","ASVGView","Color","VehicleView","constructor","args","_model","svgGraphic","model","Create","color","_color","Random","view","setModel","setCarColor","init","svgAsset","registerAndAddGraphic","setElementColor","update","setTransform2D","matrix2DH"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/A1/nodes/Vehicle/VehicleView.ts"],"sourcesContent":["import {ANodeView, ASVGGraphic, ASVGModel, ASVGView, Color} from \"../../../anigraph\";\nimport {VehicleModel} from \"./VehicleModel\";\n\nexport class VehicleView extends ASVGView{\n    protected _model!:VehicleModel;\n    svgGraphic!:ASVGGraphic;\n    get model():VehicleModel{\n        return this._model as VehicleModel;\n    }\n\n    static Create(model:VehicleModel, color?:Color, ...args:any[]){\n        color = color??Color.Random();\n        let view = new VehicleView();\n        view.setModel(model);\n        view.setCarColor(color);\n        return view;\n    }\n\n    init(){\n        this.svgGraphic = ASVGGraphic.Create(this.model.svgAsset, true);\n        this.registerAndAddGraphic(this.svgGraphic)\n        if(this.model.color) {\n            this.setCarColor(this.model.color);\n        }\n    }\n\n    setCarColor(color:Color){\n        this.svgGraphic.setElementColor(\"carbody\", color);\n    }\n\n    update(): void {\n        this.svgGraphic.setTransform2D(this.model.matrix2DH, 1);\n    }\n\n}\n"],"mappings":"AAAA,SAAmBA,WAAW,EAAaC,QAAQ,EAAEC,KAAK,QAAO,mBAAmB;AAGpF,OAAO,MAAMC,WAAW,SAASF,QAAQ;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC3BC,MAAM;IAAA,KAChBC,UAAU;EAAA;EACV,IAAIC,KAAKA,CAAA,EAAe;IACpB,OAAO,IAAI,CAACF,MAAM;EACtB;EAEA,OAAOG,MAAMA,CAACD,KAAkB,EAAEE,KAAY,EAAE,GAAGL,IAAU,EAAC;IAAA,IAAAM,MAAA;IAC1DD,KAAK,IAAAC,MAAA,GAAGD,KAAK,cAAAC,MAAA,cAAAA,MAAA,GAAET,KAAK,CAACU,MAAM,CAAC,CAAC;IAC7B,IAAIC,IAAI,GAAG,IAAIV,WAAW,CAAC,CAAC;IAC5BU,IAAI,CAACC,QAAQ,CAACN,KAAK,CAAC;IACpBK,IAAI,CAACE,WAAW,CAACL,KAAK,CAAC;IACvB,OAAOG,IAAI;EACf;EAEAG,IAAIA,CAAA,EAAE;IACF,IAAI,CAACT,UAAU,GAAGP,WAAW,CAACS,MAAM,CAAC,IAAI,CAACD,KAAK,CAACS,QAAQ,EAAE,IAAI,CAAC;IAC/D,IAAI,CAACC,qBAAqB,CAAC,IAAI,CAACX,UAAU,CAAC;IAC3C,IAAG,IAAI,CAACC,KAAK,CAACE,KAAK,EAAE;MACjB,IAAI,CAACK,WAAW,CAAC,IAAI,CAACP,KAAK,CAACE,KAAK,CAAC;IACtC;EACJ;EAEAK,WAAWA,CAACL,KAAW,EAAC;IACpB,IAAI,CAACH,UAAU,CAACY,eAAe,CAAC,SAAS,EAAET,KAAK,CAAC;EACrD;EAEAU,MAAMA,CAAA,EAAS;IACX,IAAI,CAACb,UAAU,CAACc,cAAc,CAAC,IAAI,CAACb,KAAK,CAACc,SAAS,EAAE,CAAC,CAAC;EAC3D;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}