{"ast":null,"code":"var _dec, _class, _AMaterial;\nimport { folder } from \"leva\";\nimport { ASerializable, AObject } from \"../../base\";\nimport { Color } from \"../../math\";\nimport * as THREE from \"three\";\nvar AMaterialEvents = /*#__PURE__*/function (AMaterialEvents) {\n  AMaterialEvents[\"CHANGE\"] = \"MATERIAL_CHANGE\";\n  AMaterialEvents[\"UPDATE\"] = \"MATERIAL_UPDATE\";\n  return AMaterialEvents;\n}(AMaterialEvents || {});\nexport let AMaterial = (_dec = ASerializable(\"AMaterial\"), _dec(_class = (_AMaterial = class AMaterial extends AObject {\n  get threejs() {\n    return this._material;\n  }\n  get model() {\n    return this._model;\n  }\n  constructor(...args) {\n    super();\n    this._model = void 0;\n    this._material = void 0;\n  }\n  init(model) {\n    this.setModel(model);\n  }\n  get usesVertexColors() {\n    return this.getValue('vertexColors');\n  }\n  set usesVertexColors(value) {\n    this.setValue('vertexColors', value);\n  }\n\n  /** Get set depthTest */\n  get depthTest() {\n    return this.getValue('depthTest');\n  }\n  set depthTest(value) {\n    this.setValue('vertexColors', value);\n  }\n  get depthWrite() {\n    return this.getValue('depthWrite');\n  }\n  set depthWrite(value) {\n    this.setValue('depthWrite', value);\n  }\n  get visible() {\n    return this.getValue('visible');\n  }\n  set visible(value) {\n    this.setValue('visible', value);\n  }\n\n  /**\n   * GEOMETRY_SIDE.BOTH to render both front and back faces\n   * GEOMETRY_SIDE.FRONT to render front faces only\n   * GEOMETRY_SIDE.BACK to render back faces only\n   * @param renderSide\n   */\n  setRenderSide(renderSide) {\n    this._material.side = renderSide;\n  }\n\n  //##################//--Values--\\\\##################\n  //<editor-fold desc=\"Values\">\n  getModelColor() {\n    let c = this.getValue('color');\n    if (c) {\n      return Color.FromThreeJS(c);\n    } else {\n      return Color.FromString(\"#77bb77\");\n    }\n  }\n  setModelColor(v) {\n    if (v instanceof Color) {\n      this.setValue('color', v.asThreeJS());\n    } else {\n      this.setValue('color', v);\n    }\n  }\n  setValue(name, value) {\n    let vals = {};\n    vals[name] = value;\n    this.setValues(vals);\n  }\n  setValues(values) {\n    this.threejs.setValues(values);\n    this.signalEvent(AMaterial.Events.UPDATE, values);\n  }\n  getValue(name) {\n    // @ts-ignore\n    return this.threejs[name];\n  }\n  setBlendingMode(mode) {\n    this.threejs.blending = mode;\n  }\n\n  //</editor-fold>\n  //##################\\\\--Values--//##################\n\n  setModel(model) {\n    this._model = model;\n    this._material = model._CreateTHREEJS();\n    // this.threejs.setValues(this._model.defaults);\n  }\n  getMaterialGUIParams() {\n    const self = this;\n    return {\n      MaterialProps: folder(self.model.getMaterialGUIParams(self), {\n        collapsed: false\n      })\n    };\n  }\n  dispose() {\n    this._material.dispose();\n  }\n  release() {\n    this.dispose();\n    super.release();\n  }\n}, _AMaterial.Events = AMaterialEvents, _AMaterial.GEOMETRY_SIDE = {\n  FRONT: THREE.FrontSide,\n  BACK: THREE.BackSide,\n  BOTH: THREE.DoubleSide\n}, _AMaterial)) || _class);","map":{"version":3,"names":["folder","ASerializable","AObject","Color","THREE","AMaterialEvents","AMaterial","_dec","_class","_AMaterial","threejs","_material","model","_model","constructor","args","init","setModel","usesVertexColors","getValue","value","setValue","depthTest","depthWrite","visible","setRenderSide","renderSide","side","getModelColor","c","FromThreeJS","FromString","setModelColor","v","asThreeJS","name","vals","setValues","values","signalEvent","Events","UPDATE","setBlendingMode","mode","blending","_CreateTHREEJS","getMaterialGUIParams","self","MaterialProps","collapsed","dispose","release","GEOMETRY_SIDE","FRONT","FrontSide","BACK","BackSide","BOTH","DoubleSide"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/rendering/material/AMaterial.ts"],"sourcesContent":["import {folder} from \"leva\";\nimport {ASerializable, AObject} from \"../../base\";\nimport {MaterialParameters} from \"three/src/materials/Material\";\nimport {AMaterialModel} from \"./AMaterialModel\";\nimport {Color} from \"../../math\";\nimport * as THREE from \"three\";\n\nenum AMaterialEvents{\n    CHANGE='MATERIAL_CHANGE',\n    UPDATE='MATERIAL_UPDATE'\n}\n\n@ASerializable(\"AMaterial\")\nexport class AMaterial extends AObject{\n    protected _model!:AMaterialModel;\n    public _material!:THREE.Material;\n    static Events = AMaterialEvents;\n\n    static GEOMETRY_SIDE = {\n        FRONT:THREE.FrontSide,\n        BACK:THREE.BackSide,\n        BOTH:THREE.DoubleSide\n    };\n    get threejs(){return this._material;}\n\n    get model(){\n        return this._model;\n    }\n\n    constructor(...args:any[]) {\n        super();\n    }\n\n    init(model:AMaterialModel){\n        this.setModel(model);\n    }\n\n    get usesVertexColors(){return this.getValue('vertexColors');}\n    set usesVertexColors(value:boolean|undefined){this.setValue('vertexColors',value);}\n\n    /** Get set depthTest */\n    get depthTest(){return this.getValue('depthTest');}\n    set depthTest(value:boolean|undefined){this.setValue('vertexColors',value)}\n\n    get depthWrite(){return this.getValue('depthWrite');}\n    set depthWrite(value:boolean|undefined){this.setValue('depthWrite',value)}\n\n    get visible(){return this.getValue('visible');}\n    set visible(value:boolean|undefined){this.setValue('visible',value)}\n\n\n    /**\n     * GEOMETRY_SIDE.BOTH to render both front and back faces\n     * GEOMETRY_SIDE.FRONT to render front faces only\n     * GEOMETRY_SIDE.BACK to render back faces only\n     * @param renderSide\n     */\n    setRenderSide(renderSide:THREE.Side){\n        this._material.side = renderSide;\n    }\n\n    //##################//--Values--\\\\##################\n    //<editor-fold desc=\"Values\">\n    getModelColor(){\n        let c = this.getValue('color');\n        if(c){\n            return Color.FromThreeJS(c);\n        }else{\n            return Color.FromString(\"#77bb77\");\n        }\n    }\n    setModelColor(v:Color|THREE.Color){\n        if(v instanceof  Color){\n            this.setValue('color', v.asThreeJS());\n        }else{\n            this.setValue('color', v);\n        }\n    }\n    setValue(name:string, value:any){\n        let vals:{[name:string]:any}={};\n        vals[name]=value;\n        this.setValues(vals);\n    }\n    setValues(values:MaterialParameters){\n        this.threejs.setValues(values);\n        this.signalEvent(AMaterial.Events.UPDATE, values);\n    }\n    getValue(name:string):any{\n        // @ts-ignore\n        return this.threejs[name];\n    }\n\n    setBlendingMode(mode:THREE.Blending){\n        this.threejs.blending=mode;\n    }\n\n    //</editor-fold>\n    //##################\\\\--Values--//##################\n\n    setModel(model:AMaterialModel){\n        this._model = model;\n        this._material = model._CreateTHREEJS();\n        // this.threejs.setValues(this._model.defaults);\n    }\n\n    getMaterialGUIParams() {\n        const self = this;\n        return {\n            MaterialProps: folder(\n                self.model.getMaterialGUIParams(self),\n                { collapsed: false }\n            ),\n        }\n    }\n\n    dispose(){\n        this._material.dispose();\n    }\n\n    release() {\n        this.dispose();\n        super.release();\n    }\n\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}