{"ast":null,"code":"// import {\n//     AGLContext, Color,\n//     AClickInteraction, ADragInteraction,\n//     AInteractionEvent, AKeyboardInteraction,\n//     V3\n// } from \"../../index\";\n\nimport { V3 } from \"../../math\";\nimport { AClickInteraction, ADragInteraction, AKeyboardInteraction } from \"../../interaction\";\nimport { ABasicSceneController } from \"./ABasicSceneController\";\n\n/**\n * Mostly students will just write the scene controller subclass.\n * The Component things for them to write are\n * - initRendering(renderWindow:AGLRenderWindow) | sets things up\n * - onAnimationFrameCallback(context:AGLContext) | renders the current frame\n * - createViewForNodeModel(nodeModel: ANodeModel): ANodeView | creates a view for a newly added model\n *\n */\nexport class SingleModeSceneController extends ABasicSceneController {\n  constructor(...args) {\n    super(...args);\n    this.keyboardInteraction = void 0;\n  } // abstract onMouseMove(event?:AInteractionEvent, interaction?: ADOMPointerMoveInteraction):void;\n  initInteractions() {\n    super.initInteractions();\n    const self = this;\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.dragStartCallback = this.dragStartCallback.bind(this);\n    this.dragMoveCallback = this.dragMoveCallback.bind(this);\n    this.dragEndCallback = this.dragEndCallback.bind(this);\n    // this.onMouseMove = this.onMouseMove.bind(this);\n    this.eventTarget.tabIndex = this.tabIndex;\n    this.keyboardInteraction = AKeyboardInteraction.Create(this.eventTarget,\n    // this.eventTarget.ownerDocument,\n    this.onKeyDown, this.onKeyUp);\n    this.addInteraction(this.keyboardInteraction);\n    this.addInteraction(AClickInteraction.Create(this.eventTarget, this.onClick));\n    this.addInteraction(ADragInteraction.Create(this.eventTarget, this.dragStartCallback, this.dragMoveCallback, this.dragEndCallback));\n  }\n  beforeInitInteractions() {\n    if (this.renderWindow) {\n      this.onWindowResize(this.renderWindow);\n    }\n    // this.camera.setPerspectiveFOV(75, this.renderWindow.aspect)\n    this.cameraModel.setPosition(V3(0, 0, 10));\n  }\n\n  // async initScene() {\n  //     super.initScene();\n  // }\n}\nSingleModeSceneController.ModeName = \"Default\";","map":{"version":3,"names":["V3","AClickInteraction","ADragInteraction","AKeyboardInteraction","ABasicSceneController","SingleModeSceneController","constructor","args","keyboardInteraction","initInteractions","self","onKeyDown","bind","onKeyUp","onClick","dragStartCallback","dragMoveCallback","dragEndCallback","eventTarget","tabIndex","Create","addInteraction","beforeInitInteractions","renderWindow","onWindowResize","cameraModel","setPosition","ModeName"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/starter/scene/SingleModeSceneController.ts"],"sourcesContent":["// import {\n//     AGLContext, Color,\n//     AClickInteraction, ADragInteraction,\n//     AInteractionEvent, AKeyboardInteraction,\n//     V3\n// } from \"../../index\";\nimport {AGLContext} from \"../../rendering\";\nimport {Color, V3} from \"../../math\";\nimport {AClickInteraction, ADragInteraction, AInteractionEvent, AKeyboardInteraction} from \"../../interaction\";\nimport {ABasicSceneController} from \"./ABasicSceneController\";\n\n/**\n * Mostly students will just write the scene controller subclass.\n * The Component things for them to write are\n * - initRendering(renderWindow:AGLRenderWindow) | sets things up\n * - onAnimationFrameCallback(context:AGLContext) | renders the current frame\n * - createViewForNodeModel(nodeModel: ANodeModel): ANodeView | creates a view for a newly added model\n *\n */\nexport abstract class SingleModeSceneController extends ABasicSceneController{\n    static ModeName:string=\"Default\"\n    keyboardInteraction!:AKeyboardInteraction;\n\n    abstract onClick(event:AInteractionEvent):void;\n    abstract onKeyDown(event:AInteractionEvent, interaction:AKeyboardInteraction):void;\n    abstract onKeyUp(event:AInteractionEvent, interaction:AKeyboardInteraction):void;\n    // abstract onMouseMove(event?:AInteractionEvent, interaction?: ADOMPointerMoveInteraction):void;\n\n    abstract dragStartCallback(event:AInteractionEvent, interaction?:ADragInteraction):void;\n    abstract dragMoveCallback(event:AInteractionEvent, interaction?:ADragInteraction):void;\n    abstract dragEndCallback(event:AInteractionEvent, interaction?:ADragInteraction):void;\n\n\n    initInteractions() {\n        super.initInteractions();\n        const self = this;\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.dragStartCallback = this.dragStartCallback.bind(this);\n        this.dragMoveCallback = this.dragMoveCallback.bind(this);\n        this.dragEndCallback = this.dragEndCallback.bind(this);\n        // this.onMouseMove = this.onMouseMove.bind(this);\n        this.eventTarget.tabIndex = this.tabIndex;\n\n        this.keyboardInteraction = AKeyboardInteraction.Create(\n            this.eventTarget,\n            // this.eventTarget.ownerDocument,\n            this.onKeyDown,\n            this.onKeyUp,\n        );\n        this.addInteraction(this.keyboardInteraction);\n\n        this.addInteraction(AClickInteraction.Create(this.eventTarget, this.onClick))\n\n        this.addInteraction(ADragInteraction.Create(\n            this.eventTarget,\n            this.dragStartCallback,\n            this.dragMoveCallback,\n            this.dragEndCallback\n        ))\n    }\n\n    beforeInitInteractions(){\n        if(this.renderWindow) {\n            this.onWindowResize(this.renderWindow);\n        }\n        // this.camera.setPerspectiveFOV(75, this.renderWindow.aspect)\n        this.cameraModel.setPosition(V3(0,0,10));\n\n    }\n\n    // async initScene() {\n    //     super.initScene();\n    // }\n\n\n\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAeA,EAAE,QAAO,YAAY;AACpC,SAAQC,iBAAiB,EAAEC,gBAAgB,EAAqBC,oBAAoB,QAAO,mBAAmB;AAC9G,SAAQC,qBAAqB,QAAO,yBAAyB;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAeC,yBAAyB,SAASD,qBAAqB;EAAAE,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAEzEC,mBAAmB;EAAA,EAKnB;EAOAC,gBAAgBA,CAAA,EAAG;IACf,KAAK,CAACA,gBAAgB,CAAC,CAAC;IACxB,MAAMC,IAAI,GAAG,IAAI;IACjB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACD,IAAI,CAAC,IAAI,CAAC;IACtC,IAAI,CAACE,OAAO,GAAG,IAAI,CAACA,OAAO,CAACF,IAAI,CAAC,IAAI,CAAC;IACtC,IAAI,CAACG,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACH,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACI,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACJ,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACK,eAAe,GAAG,IAAI,CAACA,eAAe,CAACL,IAAI,CAAC,IAAI,CAAC;IACtD;IACA,IAAI,CAACM,WAAW,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAEzC,IAAI,CAACX,mBAAmB,GAAGL,oBAAoB,CAACiB,MAAM,CAClD,IAAI,CAACF,WAAW;IAChB;IACA,IAAI,CAACP,SAAS,EACd,IAAI,CAACE,OACT,CAAC;IACD,IAAI,CAACQ,cAAc,CAAC,IAAI,CAACb,mBAAmB,CAAC;IAE7C,IAAI,CAACa,cAAc,CAACpB,iBAAiB,CAACmB,MAAM,CAAC,IAAI,CAACF,WAAW,EAAE,IAAI,CAACJ,OAAO,CAAC,CAAC;IAE7E,IAAI,CAACO,cAAc,CAACnB,gBAAgB,CAACkB,MAAM,CACvC,IAAI,CAACF,WAAW,EAChB,IAAI,CAACH,iBAAiB,EACtB,IAAI,CAACC,gBAAgB,EACrB,IAAI,CAACC,eACT,CAAC,CAAC;EACN;EAEAK,sBAAsBA,CAAA,EAAE;IACpB,IAAG,IAAI,CAACC,YAAY,EAAE;MAClB,IAAI,CAACC,cAAc,CAAC,IAAI,CAACD,YAAY,CAAC;IAC1C;IACA;IACA,IAAI,CAACE,WAAW,CAACC,WAAW,CAAC1B,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CAAC;EAE5C;;EAEA;EACA;EACA;AAKJ;AA5DsBK,yBAAyB,CACpCsB,QAAQ,GAAQ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}