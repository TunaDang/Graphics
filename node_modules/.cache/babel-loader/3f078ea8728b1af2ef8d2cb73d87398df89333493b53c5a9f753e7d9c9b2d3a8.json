{"ast":null,"code":"import _initializerDefineProperty from \"/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\nvar _dec, _class, _class2, _descriptor, _AObject;\nimport { proxy, ref, snapshot, subscribe } from \"valtio/vanilla\";\nimport { subscribeKey } from \"valtio/utils\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ASerializable } from \"../aserial\";\nimport { ACallbackSwitch } from \"../aevents\";\nimport { AHandlesEvents } from \"./AHandlesEvents\";\nimport { GetAAppState } from \"../../appstate/AAppState\";\nclass AStateCallbackSwitch extends ACallbackSwitch {\n  constructor(owner, handle, callback, synchronous = true, state_name = null) {\n    super(handle);\n    this.callback = void 0;\n    this.owner = void 0;\n    this.synchronous = void 0;\n    this.state_name = void 0;\n    this._unsubscribe_proxy = null;\n    this.callback = callback;\n    this.owner = owner;\n    this.synchronous = synchronous;\n    this.state_name = state_name;\n  }\n  activate() {\n    this.owner._getListeners()[this.handle] = this;\n    if (this.state_name) {\n      this._unsubscribe_proxy = subscribeKey(this.owner.state, this.state_name, () => {\n        return this.callback(this.owner);\n      }, this.synchronous);\n    } else {\n      this._unsubscribe_proxy = subscribe(this.owner.state, () => {\n        return this.callback(this.owner);\n      }, this.synchronous);\n    }\n    this.active = true;\n  }\n  deactivate() {\n    this.owner.removeListener(this.handle);\n    this.active = false;\n  }\n}\n\n/**\n * # AObjectState Decorator\n * The `@AObjectState` decorator and AObjectState\n * The @AObjectState decorator lets you declare state variables on a class that extends AObject (as is the case\n * here, because A2DSceneNode already extends AObject). AObjectState variables are tracked in a special way so that\n * other code can listen for changes to those variables. This will let us, for example, specify a callback function\n * to be executed whenever a particular AObjectState variable is changed. In this assignment, clicking and dragging\n * a point or a line will cause its coordinates to change. Our view of said point/line will listen for changes to\n * this state so that we can keep our visualization (graphics) up to date.\n * Side Note: for the curious, the state variables for each AObject are stored in what's called a `proxy`. More\n * specifically, AniGraph uses a [valtio proxy](https://github.com/pmndrs/valtio) proxt under the hood.\n *\n * ### Limitations:\n * - You cannot call on templated members\n * - no inline value initialization (it will be ignored), you need to either initialize in constructor or use ! in declaration\n *\n * @param target\n * @param propertyKey\n * @return {any}\n */\nexport function AObjectState(target, propertyKey) {\n  // if (target.constructor.AObjectStateKeys.includes(propertyKey)) {\n  //     throw new Error(`class ${target.constructor.name} already contains AObjectState with key ${propertyKey}`);\n  // }\n  target.constructor.AObjectStateKeys.push(propertyKey);\n  Object.defineProperty(target, propertyKey, {\n    get: function () {\n      return this.state[propertyKey];\n      // return valuesByInstance.get(this);\n    },\n    set: function (value) {\n      this.state[propertyKey] = value;\n      // valuesByInstance.set(this, value);\n    }\n  });\n  return target;\n}\n_c = AObjectState;\nexport function AObjectStateRef(target, propertyKey) {\n  target.constructor.AObjectStateKeys.push(propertyKey);\n  Object.defineProperty(target, propertyKey, {\n    get: function () {\n      return this.state[propertyKey];\n      // return valuesByInstance.get(this);\n    },\n    set: function (value) {\n      this.state[propertyKey] = ref(value);\n      // valuesByInstance.set(this, value);\n    }\n  });\n  return target;\n}\n_c2 = AObjectStateRef;\nexport let AObject = (_dec = ASerializable(\"AObject\"), _dec(_class = (_class2 = (_AObject = class AObject extends AHandlesEvents {\n  static SerializationLabel() {\n    if (this.hasOwnProperty(\"_serializationLabel\")) {\n      // @ts-ignore\n      return this._serializationLabel;\n    } else {\n      return this.name;\n    }\n  }\n  //Base class, gets uid for reference saving\n\n  getInfo(name) {\n    return this._aobjectInfo[name];\n  }\n  setInfo(name, value) {\n    this._aobjectInfo[name] = value;\n  }\n  get ClassConstructor() {\n    return this.constructor;\n  }\n  get serializationLabel() {\n    // @ts-ignore\n    return this.constructor._serializationLabel;\n  }\n  get stateSnapshop() {\n    return snapshot(this.state);\n  }\n\n  // get useSnapshot(){\n  //\n  // }\n\n  constructor(...args) {\n    super();\n    this.state = {};\n    // public tempState:{[name:string]:any}={};\n    this.listeners = {};\n    _initializerDefineProperty(this, \"uid\", _descriptor, this);\n    // @AObjectState AObjectVersion!:string;\n    this._aobjectInfo = {};\n    this.state = proxy({});\n    if (args.length > 0) {\n      this.uid = args[0];\n    } else {\n      this.uid = uuidv4();\n    }\n  }\n  release() {\n    this.clearSubscriptions();\n    // if(Object.keys(this._eventCallbackDicts).length>0) {\n    //     for (let k in this._eventCallbackDicts) {\n    //         // console.log(this._eventCallbackDicts[k]);\n    //         this._eventCallbackDicts[k]\n    //     }\n    //     // console.warn(`disposing object ${this} with the above event listeners still listening...`)\n    // }\n  }\n  static CreateWithState(state) {\n    let newObj = new this();\n    for (let key in state) {\n      // @ts-ignore\n      newObj[key] = state[key];\n    }\n    return newObj;\n  }\n  removeListener(handle) {\n    this.listeners[handle]._unsubscribe_proxy();\n    delete this.listeners[handle];\n  }\n  _getListeners() {\n    return this.listeners;\n  }\n  toJSON() {\n    return snapshot(this.state);\n  }\n  static fromJSON(state_dict) {\n    return this.CreateWithState(state_dict);\n  }\n\n  // ASerialize(ref_map?:{[id:string]:ASerializableClass}){\n  //     var rstate:{[name:string]:any} = {};\n  //     for (let key in this.state){\n  //         rstate[key]=GetIndexedCopy(this.state[key], ref_map);\n  //     }\n  // }\n\n  /**\n   * Sets a callback function to be called whenever the state specified in state_key changes.\n   * The return value callbackSwitch is a callback switch. You can activate the listener with callbackSwitch.activate()\n   * and deactive with callbackSwitch.deactivate().\n   * Example Usage:\n   * ```typescript\n   * var callbackswitch = model.addStateKeyListener('name',()=>{\n   *      n_name_changes = n_name_changes+1;\n   * })\n   * ```\n   * @param state_key - the name of the state to listen to\n   * @param callback - the callback to be executed when state changes\n   * @param handle - the handle / unique identifier for\n   * @param synchronous - whether callbacks should happen synchronously or allow for batching\n   */\n  addStateKeyListener(state_key, callback, handle, synchronous = true) {\n    var h = handle ? handle : uuidv4();\n    const object = this;\n    const callbackSwitch = new AStateCallbackSwitch(object, h, callback, synchronous, state_key);\n    callbackSwitch.activate();\n    return callbackSwitch;\n  }\n  addStateListener(callback, handle, synchronous = true) {\n    var h = handle ? handle : uuidv4();\n    const object = this;\n    const callbackSwitch = new AStateCallbackSwitch(object, h, callback, synchronous);\n    callbackSwitch.activate();\n    return callbackSwitch;\n  }\n  subscribeToAppState(key, callback, subscriptionKey) {\n    let appState = GetAAppState();\n    this.subscribe(appState.addStateValueListener(key, callback), subscriptionKey);\n  }\n\n  //##################//--ASignalsEvents--\\\\##################\n  //<editor-fold desc=\"ASignalsEvents\">\n  // protected _eventCallbackDicts: { [name: string]: AEventCallbackDict } = {};\n  //\n  // _getEventCallbackDict(eventName: string) {\n  //   return this._eventCallbackDicts[eventName];\n  // }\n  //\n  // addEventListener(\n  //   eventName: string,\n  //   callback: (...args: any[]) => void,\n  //   handle?: string\n  // ) {\n  //   if (this._eventCallbackDicts[eventName] === undefined) {\n  //     this._eventCallbackDicts[eventName] = new AEventCallbackDict(eventName);\n  //   }\n  //   return this._eventCallbackDicts[eventName].addCallback(callback, handle);\n  // }\n  //\n  // addEventListeners(\n  //   eventName: string,\n  //   callbacks: ((...args: any[]) => void)[],\n  //   handle?: string\n  // ) {\n  //   if (this._eventCallbackDicts[eventName] === undefined) {\n  //     this._eventCallbackDicts[eventName] = new AEventCallbackDict(eventName);\n  //   }\n  //   return this._eventCallbackDicts[eventName].addCallback(callbacks, handle);\n  // }\n  //\n  // addOneTimeEventListener(\n  //   eventName: string,\n  //   callback: (...args: any[]) => void,\n  //   handle?: string\n  // ) {\n  //   if (this._eventCallbackDicts[eventName] === undefined) {\n  //     this._eventCallbackDicts[eventName] = new AEventCallbackDict(eventName);\n  //   }\n  //   const self = this;\n  //   handle = handle ? handle : (uuidv4() as string);\n  //   function wrapped(...args: []) {\n  //     callback(...args);\n  //     self.removeEventListener(eventName, handle as string);\n  //   }\n  //   return this._eventCallbackDicts[eventName].addCallback(wrapped, handle);\n  // }\n  //\n  // removeEventListener(eventName: string, handle: string) {\n  //   if (this._eventCallbackDicts[eventName] === undefined) {\n  //     return;\n  //   }\n  //   return this._eventCallbackDicts[eventName].removeCallback(handle);\n  // }\n  //\n  // signalEvent(eventName: string, ...args: any[]) {\n  //   if (this._eventCallbackDicts[eventName] === undefined) {\n  //     this._eventCallbackDicts[eventName] = new AEventCallbackDict(eventName);\n  //   }\n  //   this._getEventCallbackDict(eventName).signalEvent(...args);\n  // }\n  // //</editor-fold>\n  // //##################\\\\--ASignalsEvents--//##################\n  //\n  // //##################//--ASubscribesToEvents--\\\\##################\n  // //<editor-fold desc=\"ASubscribesToEvents\">\n  // protected _subscriptions: { [name: string]: ACallbackSwitch } = {};\n  // public subscribe(callbackSwitch: ACallbackSwitch, name?: string) {\n  //   name = name ? name : uuidv4();\n  //   if (name in this._subscriptions) {\n  //     if (this._subscriptions[name].active) {\n  //       this._subscriptions[name].deactivate();\n  //       console.warn(\n  //         `Re-Subscribing to \"${name}\", which already has a subscription!`\n  //       );\n  //     }\n  //   }\n  //   this._subscriptions[name] = callbackSwitch;\n  // }\n  //\n  // public unsubscribe(name: string, errorIfAbsent: boolean = true) {\n  //   if (name in this._subscriptions) {\n  //     if (this._subscriptions[name].active) {\n  //       this._subscriptions[name].deactivate();\n  //     }\n  //     delete this._subscriptions[name];\n  //   } else if (errorIfAbsent) {\n  //     // select both, drag on one, and release with shift then click again\n  //     throw new Error(\n  //       `tried to remove subscription \"${name}\", but no such subscription found in ${this}`\n  //     );\n  //   }\n  // }\n  //\n  // clearSubscriptions() {\n  //   for (let name in this._subscriptions) {\n  //     this.unsubscribe(name);\n  //   }\n  // }\n  //\n  // deactivateSubscription(name: string) {\n  //   if (name in this._subscriptions) {\n  //     if (this._subscriptions[name].active) {\n  //       this._subscriptions[name].deactivate();\n  //     }\n  //   } else {\n  //     throw new Error(\n  //       `tried to deactivate subscription \"${name}\", but no such subscription found in ${this}`\n  //     );\n  //   }\n  // }\n  //\n  // activateSubscription(name: string) {\n  //   if (name in this._subscriptions) {\n  //     if (!this._subscriptions[name].active) {\n  //       this._subscriptions[name].activate();\n  //     }\n  //   } else {\n  //     throw new Error(\n  //       `tried to activate subscription \"${name}\", but no such subscription found in ${this}`\n  //     );\n  //   }\n  // }\n  //</editor-fold>\n  //##################\\\\--ASubscribesToEvents--//##################\n}, _AObject.AObjectStateKeys = [], _AObject.AObjectVersion = 1, _AObject), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"uid\", [AObjectState], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);\nvar _c, _c2;\n$RefreshReg$(_c, \"AObjectState\");\n$RefreshReg$(_c2, \"AObjectStateRef\");","map":{"version":3,"names":["proxy","ref","snapshot","subscribe","subscribeKey","v4","uuidv4","ASerializable","ACallbackSwitch","AHandlesEvents","GetAAppState","AStateCallbackSwitch","constructor","owner","handle","callback","synchronous","state_name","_unsubscribe_proxy","activate","_getListeners","state","active","deactivate","removeListener","AObjectState","target","propertyKey","AObjectStateKeys","push","Object","defineProperty","get","set","value","_c","AObjectStateRef","_c2","AObject","_dec","_class","_class2","_AObject","SerializationLabel","hasOwnProperty","_serializationLabel","name","getInfo","_aobjectInfo","setInfo","ClassConstructor","serializationLabel","stateSnapshop","args","listeners","_initializerDefineProperty","_descriptor","length","uid","release","clearSubscriptions","CreateWithState","newObj","key","toJSON","fromJSON","state_dict","addStateKeyListener","state_key","h","object","callbackSwitch","addStateListener","subscribeToAppState","subscriptionKey","appState","addStateValueListener","AObjectVersion","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","$RefreshReg$"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/base/aobject/AObject.ts"],"sourcesContent":["import { proxy, ref, snapshot, subscribe } from \"valtio/vanilla\";\nimport { subscribeKey } from \"valtio/utils\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ASerializable } from \"../aserial\";\nimport { ACallbackSwitch, AEventCallbackDict } from \"../aevents\";\nimport { GenericDict } from \"../../basictypes\";\nimport {AHandlesEvents} from \"./AHandlesEvents\";\nimport {AppStateValueChangeCallback} from \"../../basictypes\";\nimport {GetAAppState} from \"../../appstate/AAppState\";\n\nclass AStateCallbackSwitch extends ACallbackSwitch {\n  public callback: (...args: any[]) => any;\n  public owner: AObject;\n  public synchronous: boolean;\n  public state_name: string | null;\n  public _unsubscribe_proxy: any = null;\n  constructor(\n    owner: AObject,\n    handle: string,\n    callback: (...args: any[]) => any,\n    synchronous: boolean = true,\n    state_name: string | null = null\n  ) {\n    super(handle);\n    this.callback = callback;\n    this.owner = owner;\n    this.synchronous = synchronous;\n    this.state_name = state_name;\n  }\n\n  activate() {\n    this.owner._getListeners()[this.handle] = this;\n    if (this.state_name) {\n      this._unsubscribe_proxy = subscribeKey(\n        this.owner.state,\n        this.state_name,\n        () => {\n          return this.callback(this.owner);\n        },\n        this.synchronous\n      );\n    } else {\n      this._unsubscribe_proxy = subscribe(\n        this.owner.state,\n        () => {\n          return this.callback(this.owner);\n        },\n        this.synchronous\n      );\n    }\n    this.active = true;\n  }\n  deactivate() {\n    this.owner.removeListener(this.handle);\n    this.active = false;\n  }\n}\n\n/**\n * # AObjectState Decorator\n * The `@AObjectState` decorator and AObjectState\n * The @AObjectState decorator lets you declare state variables on a class that extends AObject (as is the case\n * here, because A2DSceneNode already extends AObject). AObjectState variables are tracked in a special way so that\n * other code can listen for changes to those variables. This will let us, for example, specify a callback function\n * to be executed whenever a particular AObjectState variable is changed. In this assignment, clicking and dragging\n * a point or a line will cause its coordinates to change. Our view of said point/line will listen for changes to\n * this state so that we can keep our visualization (graphics) up to date.\n * Side Note: for the curious, the state variables for each AObject are stored in what's called a `proxy`. More\n * specifically, AniGraph uses a [valtio proxy](https://github.com/pmndrs/valtio) proxt under the hood.\n *\n * ### Limitations:\n * - You cannot call on templated members\n * - no inline value initialization (it will be ignored), you need to either initialize in constructor or use ! in declaration\n *\n * @param target\n * @param propertyKey\n * @return {any}\n */\nexport function AObjectState(target: any, propertyKey: any) {\n  // if (target.constructor.AObjectStateKeys.includes(propertyKey)) {\n  //     throw new Error(`class ${target.constructor.name} already contains AObjectState with key ${propertyKey}`);\n  // }\n  target.constructor.AObjectStateKeys.push(propertyKey);\n  Object.defineProperty(target, propertyKey, {\n    get: function () {\n      return this.state[propertyKey];\n      // return valuesByInstance.get(this);\n    },\n    set: function (value) {\n      this.state[propertyKey] = value;\n      // valuesByInstance.set(this, value);\n    },\n  });\n  return target;\n}\n\nexport function AObjectStateRef(target: any, propertyKey: any) {\n  target.constructor.AObjectStateKeys.push(propertyKey);\n\n  Object.defineProperty(target, propertyKey, {\n    get: function () {\n      return this.state[propertyKey];\n      // return valuesByInstance.get(this);\n    },\n    set: function (value) {\n      this.state[propertyKey] = ref(value);\n      // valuesByInstance.set(this, value);\n    },\n  });\n  return target;\n}\n\n@ASerializable(\"AObject\")\nexport class AObject extends AHandlesEvents{\n  static SerializationLabel() {\n    if (this.hasOwnProperty(\"_serializationLabel\")) {\n      // @ts-ignore\n      return this._serializationLabel;\n    } else {\n      return this.name;\n    }\n  }\n  //Base class, gets uid for reference saving\n  static AObjectStateKeys: string[] = [];\n  // public _stateObject:{[name:string]:any}={AObjectVersion:1.0};\n  static AObjectVersion: number = 1;\n  public state: { [name: string]: any } = {};\n  // public tempState:{[name:string]:any}={};\n  private listeners: { [handle: string]: AStateCallbackSwitch } = {};\n  @AObjectState uid!: string;\n  // @AObjectState AObjectVersion!:string;\n\n  _aobjectInfo: GenericDict = {};\n  getInfo(name: string) {\n    return this._aobjectInfo[name];\n  }\n  setInfo(name: string, value: any) {\n    this._aobjectInfo[name] = value;\n  }\n\n  get ClassConstructor() {\n    return this.constructor as typeof AObject;\n  }\n\n  get serializationLabel() {\n    // @ts-ignore\n    return this.constructor._serializationLabel;\n  }\n\n  get stateSnapshop() {\n    return snapshot(this.state);\n  }\n\n  // get useSnapshot(){\n  //\n  // }\n\n  constructor();\n  constructor(uid:string);\n  constructor(...args: Array<any>){\n    super();\n    this.state = proxy({});\n    if(args.length>0){\n      this.uid = args[0];\n    }else{\n      this.uid = uuidv4();\n    }\n  }\n\n    release(){\n        this.clearSubscriptions();\n        // if(Object.keys(this._eventCallbackDicts).length>0) {\n        //     for (let k in this._eventCallbackDicts) {\n        //         // console.log(this._eventCallbackDicts[k]);\n        //         this._eventCallbackDicts[k]\n        //     }\n        //     // console.warn(`disposing object ${this} with the above event listeners still listening...`)\n        // }\n    };\n\n  static CreateWithState(state: { [name: string]: any }) {\n    let newObj = new this();\n    for (let key in state) {\n      // @ts-ignore\n      newObj[key] = state[key];\n    }\n    return newObj;\n  }\n\n  removeListener(handle: string) {\n    this.listeners[handle]._unsubscribe_proxy();\n    delete this.listeners[handle];\n  }\n\n  _getListeners() {\n    return this.listeners;\n  }\n\n  toJSON() {\n    return snapshot(this.state);\n  }\n\n  static fromJSON(state_dict: { [name: string]: any }) {\n    return this.CreateWithState(state_dict);\n  }\n\n  // ASerialize(ref_map?:{[id:string]:ASerializableClass}){\n  //     var rstate:{[name:string]:any} = {};\n  //     for (let key in this.state){\n  //         rstate[key]=GetIndexedCopy(this.state[key], ref_map);\n  //     }\n  // }\n\n  /**\n   * Sets a callback function to be called whenever the state specified in state_key changes.\n   * The return value callbackSwitch is a callback switch. You can activate the listener with callbackSwitch.activate()\n   * and deactive with callbackSwitch.deactivate().\n   * Example Usage:\n   * ```typescript\n   * var callbackswitch = model.addStateKeyListener('name',()=>{\n   *      n_name_changes = n_name_changes+1;\n   * })\n   * ```\n   * @param state_key - the name of the state to listen to\n   * @param callback - the callback to be executed when state changes\n   * @param handle - the handle / unique identifier for\n   * @param synchronous - whether callbacks should happen synchronously or allow for batching\n   */\n  addStateKeyListener(\n    state_key: string,\n    callback: (self: AObject) => void,\n    handle?: string,\n    synchronous: boolean = true\n  ) {\n    var h: string = handle ? handle : (uuidv4() as string);\n    const object = this;\n    const callbackSwitch = new AStateCallbackSwitch(\n      object,\n      h,\n      callback,\n      synchronous,\n      state_key\n    );\n    callbackSwitch.activate();\n    return callbackSwitch;\n  }\n\n  addStateListener(\n    callback: (self: AObject) => void,\n    handle?: string,\n    synchronous: boolean = true\n  ) {\n    var h: string = handle ? handle : (uuidv4() as string);\n    const object = this;\n    const callbackSwitch = new AStateCallbackSwitch(\n      object,\n      h,\n      callback,\n      synchronous\n    );\n    callbackSwitch.activate();\n    return callbackSwitch;\n  }\n\n  subscribeToAppState(key:string, callback:AppStateValueChangeCallback, subscriptionKey?:string) {\n    let appState = GetAAppState();\n    this.subscribe(\n        appState.addStateValueListener(key, callback), subscriptionKey\n    )\n  }\n\n  //##################//--ASignalsEvents--\\\\##################\n  //<editor-fold desc=\"ASignalsEvents\">\n  // protected _eventCallbackDicts: { [name: string]: AEventCallbackDict } = {};\n  //\n  // _getEventCallbackDict(eventName: string) {\n  //   return this._eventCallbackDicts[eventName];\n  // }\n  //\n  // addEventListener(\n  //   eventName: string,\n  //   callback: (...args: any[]) => void,\n  //   handle?: string\n  // ) {\n  //   if (this._eventCallbackDicts[eventName] === undefined) {\n  //     this._eventCallbackDicts[eventName] = new AEventCallbackDict(eventName);\n  //   }\n  //   return this._eventCallbackDicts[eventName].addCallback(callback, handle);\n  // }\n  //\n  // addEventListeners(\n  //   eventName: string,\n  //   callbacks: ((...args: any[]) => void)[],\n  //   handle?: string\n  // ) {\n  //   if (this._eventCallbackDicts[eventName] === undefined) {\n  //     this._eventCallbackDicts[eventName] = new AEventCallbackDict(eventName);\n  //   }\n  //   return this._eventCallbackDicts[eventName].addCallback(callbacks, handle);\n  // }\n  //\n  // addOneTimeEventListener(\n  //   eventName: string,\n  //   callback: (...args: any[]) => void,\n  //   handle?: string\n  // ) {\n  //   if (this._eventCallbackDicts[eventName] === undefined) {\n  //     this._eventCallbackDicts[eventName] = new AEventCallbackDict(eventName);\n  //   }\n  //   const self = this;\n  //   handle = handle ? handle : (uuidv4() as string);\n  //   function wrapped(...args: []) {\n  //     callback(...args);\n  //     self.removeEventListener(eventName, handle as string);\n  //   }\n  //   return this._eventCallbackDicts[eventName].addCallback(wrapped, handle);\n  // }\n  //\n  // removeEventListener(eventName: string, handle: string) {\n  //   if (this._eventCallbackDicts[eventName] === undefined) {\n  //     return;\n  //   }\n  //   return this._eventCallbackDicts[eventName].removeCallback(handle);\n  // }\n  //\n  // signalEvent(eventName: string, ...args: any[]) {\n  //   if (this._eventCallbackDicts[eventName] === undefined) {\n  //     this._eventCallbackDicts[eventName] = new AEventCallbackDict(eventName);\n  //   }\n  //   this._getEventCallbackDict(eventName).signalEvent(...args);\n  // }\n  // //</editor-fold>\n  // //##################\\\\--ASignalsEvents--//##################\n  //\n  // //##################//--ASubscribesToEvents--\\\\##################\n  // //<editor-fold desc=\"ASubscribesToEvents\">\n  // protected _subscriptions: { [name: string]: ACallbackSwitch } = {};\n  // public subscribe(callbackSwitch: ACallbackSwitch, name?: string) {\n  //   name = name ? name : uuidv4();\n  //   if (name in this._subscriptions) {\n  //     if (this._subscriptions[name].active) {\n  //       this._subscriptions[name].deactivate();\n  //       console.warn(\n  //         `Re-Subscribing to \"${name}\", which already has a subscription!`\n  //       );\n  //     }\n  //   }\n  //   this._subscriptions[name] = callbackSwitch;\n  // }\n  //\n  // public unsubscribe(name: string, errorIfAbsent: boolean = true) {\n  //   if (name in this._subscriptions) {\n  //     if (this._subscriptions[name].active) {\n  //       this._subscriptions[name].deactivate();\n  //     }\n  //     delete this._subscriptions[name];\n  //   } else if (errorIfAbsent) {\n  //     // select both, drag on one, and release with shift then click again\n  //     throw new Error(\n  //       `tried to remove subscription \"${name}\", but no such subscription found in ${this}`\n  //     );\n  //   }\n  // }\n  //\n  // clearSubscriptions() {\n  //   for (let name in this._subscriptions) {\n  //     this.unsubscribe(name);\n  //   }\n  // }\n  //\n  // deactivateSubscription(name: string) {\n  //   if (name in this._subscriptions) {\n  //     if (this._subscriptions[name].active) {\n  //       this._subscriptions[name].deactivate();\n  //     }\n  //   } else {\n  //     throw new Error(\n  //       `tried to deactivate subscription \"${name}\", but no such subscription found in ${this}`\n  //     );\n  //   }\n  // }\n  //\n  // activateSubscription(name: string) {\n  //   if (name in this._subscriptions) {\n  //     if (!this._subscriptions[name].active) {\n  //       this._subscriptions[name].activate();\n  //     }\n  //   } else {\n  //     throw new Error(\n  //       `tried to activate subscription \"${name}\", but no such subscription found in ${this}`\n  //     );\n  //   }\n  // }\n  //</editor-fold>\n  //##################\\\\--ASubscribesToEvents--//##################\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}