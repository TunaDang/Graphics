{"ast":null,"code":"var _dec, _class;\nimport { AGraphicGroup } from \"../graphicobject\";\nimport * as THREE from \"three\";\nimport { ASerializable } from \"../../base\";\nexport let ALoadedElement = (_dec = ASerializable(\"ALoadedElement\"), _dec(_class = class ALoadedElement extends AGraphicGroup {\n  constructor(object) {\n    super();\n    this._sourceObject = void 0;\n    this.loadedObject = void 0;\n    this.loadedObject = object.getNewSceneObject();\n    this.threejs.add(this.loadedObject);\n    this._sourceObject = object;\n  }\n  setMaterial(material) {\n    if (this.loadedObject instanceof THREE.Mesh && this.loadedObject.material instanceof THREE.Material) {\n      this.loadedObject.material = material;\n    }\n  }\n  onMaterialChange(newMaterial) {\n    this.setMaterial(newMaterial.threejs);\n  }\n  onMaterialUpdate(newMaterial, ...args) {\n    super.onMaterialUpdate(newMaterial, ...args);\n  }\n  updateSourceTransform() {\n    this._sourceObject.sourceTransform.getMatrix().assignTo(this.loadedObject.matrix);\n  }\n}) || _class);","map":{"version":3,"names":["AGraphicGroup","THREE","ASerializable","ALoadedElement","_dec","_class","constructor","object","_sourceObject","loadedObject","getNewSceneObject","threejs","add","setMaterial","material","Mesh","Material","onMaterialChange","newMaterial","onMaterialUpdate","args","updateSourceTransform","sourceTransform","getMatrix","assignTo","matrix"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/rendering/loaded/ALoadedElement.ts"],"sourcesContent":["import {AGraphicGroup} from \"../graphicobject\";\nimport {Color} from \"../../math\";\nimport {AObject3DModelWrapper} from \"../../geometry\";\nimport {AMaterial} from \"../material\";\nimport * as THREE from \"three\";\nimport {ASerializable} from \"../../base\";\n\nexport interface ALoadedElementInterface{\n    updateSourceTransform():void;\n}\n\n@ASerializable(\"ALoadedElement\")\nexport class ALoadedElement extends AGraphicGroup implements ALoadedElementInterface{\n    public _sourceObject:AObject3DModelWrapper\n    public loadedObject:THREE.Object3D;\n    constructor(object:AObject3DModelWrapper) {\n        super();\n        this.loadedObject= object.getNewSceneObject();\n        this.threejs.add(this.loadedObject);\n        this._sourceObject=object;\n    }\n\n    setMaterial(material:Color|THREE.Color|THREE.Material|THREE.Material[]){\n        if(this.loadedObject instanceof THREE.Mesh && this.loadedObject.material instanceof THREE.Material){\n            this.loadedObject.material = material;\n        }\n    }\n\n    onMaterialChange(newMaterial:AMaterial){\n        this.setMaterial(newMaterial.threejs);\n    }\n    onMaterialUpdate(newMaterial: AMaterial, ...args:any[]) {\n        super.onMaterialUpdate(newMaterial, ...args);\n    }\n\n    updateSourceTransform(){\n        this._sourceObject.sourceTransform.getMatrix().assignTo(this.loadedObject.matrix);\n    }\n}\n\n"],"mappings":";AAAA,SAAQA,aAAa,QAAO,kBAAkB;AAI9C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAAQC,aAAa,QAAO,YAAY;AAMxC,WACaC,cAAc,IAAAC,IAAA,GAD1BF,aAAa,CAAC,gBAAgB,CAAC,EAAAE,IAAA,CAAAC,MAAA,GAAhC,MACaF,cAAc,SAASH,aAAa,CAAmC;EAGhFM,WAAWA,CAACC,MAA4B,EAAE;IACtC,KAAK,CAAC,CAAC;IAAC,KAHLC,aAAa;IAAA,KACbC,YAAY;IAGf,IAAI,CAACA,YAAY,GAAEF,MAAM,CAACG,iBAAiB,CAAC,CAAC;IAC7C,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,YAAY,CAAC;IACnC,IAAI,CAACD,aAAa,GAACD,MAAM;EAC7B;EAEAM,WAAWA,CAACC,QAA0D,EAAC;IACnE,IAAG,IAAI,CAACL,YAAY,YAAYR,KAAK,CAACc,IAAI,IAAI,IAAI,CAACN,YAAY,CAACK,QAAQ,YAAYb,KAAK,CAACe,QAAQ,EAAC;MAC/F,IAAI,CAACP,YAAY,CAACK,QAAQ,GAAGA,QAAQ;IACzC;EACJ;EAEAG,gBAAgBA,CAACC,WAAqB,EAAC;IACnC,IAAI,CAACL,WAAW,CAACK,WAAW,CAACP,OAAO,CAAC;EACzC;EACAQ,gBAAgBA,CAACD,WAAsB,EAAE,GAAGE,IAAU,EAAE;IACpD,KAAK,CAACD,gBAAgB,CAACD,WAAW,EAAE,GAAGE,IAAI,CAAC;EAChD;EAEAC,qBAAqBA,CAAA,EAAE;IACnB,IAAI,CAACb,aAAa,CAACc,eAAe,CAACC,SAAS,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACf,YAAY,CAACgB,MAAM,CAAC;EACrF;AACJ,CAAC,KAAApB,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}