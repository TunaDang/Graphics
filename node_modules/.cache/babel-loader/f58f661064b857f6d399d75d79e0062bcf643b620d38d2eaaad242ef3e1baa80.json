{"ast":null,"code":"import ReactExports, { useRef, useCallback, useEffect, useMemo, useDebugValue } from 'react';\nimport { isChanged, createProxy, affectedToPathList } from 'proxy-compare';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/index.js';\nimport { subscribe, snapshot } from 'valtio/vanilla';\nconst {\n  use\n} = ReactExports;\nconst {\n  useSyncExternalStore\n} = useSyncExternalStoreExports;\nconst useAffectedDebugValue = (state, affected) => {\n  const pathList = useRef();\n  useEffect(() => {\n    pathList.current = affectedToPathList(state, affected, true);\n  });\n  useDebugValue(pathList.current);\n};\nconst targetCache = /* @__PURE__ */new WeakMap();\nfunction useSnapshot(proxyObject, options) {\n  const notifyInSync = options == null ? void 0 : options.sync;\n  const lastSnapshot = useRef();\n  const lastAffected = useRef();\n  let inRender = true;\n  const currSnapshot = useSyncExternalStore(useCallback(callback => {\n    const unsub = subscribe(proxyObject, callback, notifyInSync);\n    callback();\n    return unsub;\n  }, [proxyObject, notifyInSync]), () => {\n    const nextSnapshot = snapshot(proxyObject, use);\n    try {\n      if (!inRender && lastSnapshot.current && lastAffected.current && !isChanged(lastSnapshot.current, nextSnapshot, lastAffected.current, /* @__PURE__ */new WeakMap())) {\n        return lastSnapshot.current;\n      }\n    } catch (e) {}\n    return nextSnapshot;\n  }, () => snapshot(proxyObject, use));\n  inRender = false;\n  const currAffected = /* @__PURE__ */new WeakMap();\n  useEffect(() => {\n    lastSnapshot.current = currSnapshot;\n    lastAffected.current = currAffected;\n  });\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    useAffectedDebugValue(currSnapshot, currAffected);\n  }\n  const proxyCache = useMemo(() => /* @__PURE__ */new WeakMap(), []);\n  return createProxy(currSnapshot, currAffected, proxyCache, targetCache);\n}\nexport { useSnapshot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}