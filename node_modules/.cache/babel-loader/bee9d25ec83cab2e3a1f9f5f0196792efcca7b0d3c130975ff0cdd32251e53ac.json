{"ast":null,"code":"var _dec, _class;\nimport { SplineModel } from \"../Spline/SplineModel\";\nimport { VehicleModel } from \"../Vehicle/VehicleModel\";\nimport { ASerializable, Color } from \"../../../anigraph\";\nexport let TRACK_COLOR_MODES = /*#__PURE__*/function (TRACK_COLOR_MODES) {\n  TRACK_COLOR_MODES[\"STREET\"] = \"Street\";\n  TRACK_COLOR_MODES[\"RANDBOW\"] = \"Randbow\";\n  TRACK_COLOR_MODES[\"CONSTANT\"] = \"CONSTANT\";\n  return TRACK_COLOR_MODES;\n}({});\nexport let TrackModel = (_dec = ASerializable(\"TrackModel\"), _dec(_class = class TrackModel extends SplineModel {\n  get children() {\n    return this._children;\n  }\n  constructor() {\n    super();\n    this.currentTrackColor = TRACK_COLOR_MODES.STREET;\n  }\n  setColorTo(color) {\n    this.verts.FillColor(color);\n    this.signalGeometryUpdate();\n  }\n  setColorToSolid(color) {\n    var _color;\n    this.currentTrackColor = TRACK_COLOR_MODES.CONSTANT;\n    color = (_color = color) !== null && _color !== void 0 ? _color : new Color(0.4, 0.4, 0.4);\n    this.setColorTo(color);\n  }\n  setColorToRandom() {\n    this.currentTrackColor = TRACK_COLOR_MODES.RANDBOW;\n    this.verts.RandomizeColor();\n    this.verts.color.setAt(this.verts.length - 1, this.verts.color.getAt(0));\n    this.verts.color.setAt(this.verts.length - 2, this.verts.color.getAt(0));\n    this.signalGeometryUpdate();\n  }\n  setColorToStreet() {\n    this.currentTrackColor = TRACK_COLOR_MODES.STREET;\n    for (let v = 0; v < this.verts.length; v++) {\n      this.verts.color.setAt(v, this.getNewTrackVertColor());\n    }\n    this.verts.color.setAt(this.verts.length - 1, this.verts.color.getAt(0));\n    this.verts.color.setAt(this.verts.length - 2, this.verts.color.getAt(0));\n    this.signalGeometryUpdate();\n  }\n  addVehicle(svgAsset, startTime, color, driveMode, speed) {\n    let vehicle = new VehicleModel(svgAsset, startTime, driveMode, speed);\n    if (color) {\n      vehicle.setColor(color);\n    }\n    this.addChild(vehicle);\n    return vehicle;\n  }\n  update(t) {\n    for (let c of this.children) {\n      c.update(t);\n    }\n  }\n  getNewTrackVertColor() {\n    switch (this.currentTrackColor) {\n      case TRACK_COLOR_MODES.STREET:\n        let brightness = 0.5 + Math.random() * 0.2;\n        return new Color(brightness, brightness, brightness);\n      case TRACK_COLOR_MODES.CONSTANT:\n        return new Color(0.4, 0.4, 0.4);\n      case TRACK_COLOR_MODES.RANDBOW:\n        return Color.Random();\n      default:\n        console.warn(`unknown track color option \"${this.currentTrackColor}\"!`);\n        break;\n    }\n  }\n}) || _class);","map":{"version":3,"names":["SplineModel","VehicleModel","ASerializable","Color","TRACK_COLOR_MODES","TrackModel","_dec","_class","children","_children","constructor","currentTrackColor","STREET","setColorTo","color","verts","FillColor","signalGeometryUpdate","setColorToSolid","_color","CONSTANT","setColorToRandom","RANDBOW","RandomizeColor","setAt","length","getAt","setColorToStreet","v","getNewTrackVertColor","addVehicle","svgAsset","startTime","driveMode","speed","vehicle","setColor","addChild","update","t","c","brightness","Math","random","Random","console","warn"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/A1/nodes/Track/TrackModel.ts"],"sourcesContent":["import {SplineModel} from \"../Spline/SplineModel\";\nimport {VehicleDriveMode, VehicleModel} from \"../Vehicle/VehicleModel\";\nimport {ANodeModel2D, ASerializable, Color, SVGAsset} from \"../../../anigraph\";\n\nexport enum TRACK_COLOR_MODES{\n    STREET=\"Street\",\n    RANDBOW=\"Randbow\",\n    CONSTANT=\"CONSTANT\"\n}\n\n@ASerializable(\"TrackModel\")\nexport class TrackModel extends SplineModel{\n    currentTrackColor:TRACK_COLOR_MODES=TRACK_COLOR_MODES.STREET;\n\n\n    get children():VehicleModel[]{\n        return this._children as VehicleModel[];\n    }\n\n    constructor() {\n        super();\n    }\n\n    setColorTo(color:Color){\n        this.verts.FillColor(color)\n        this.signalGeometryUpdate();\n    }\n\n    setColorToSolid(color?:Color){\n        this.currentTrackColor = TRACK_COLOR_MODES.CONSTANT;\n        color = color??new Color(0.4, 0.4, 0.4);\n        this.setColorTo(color);\n    }\n\n    setColorToRandom(){\n        this.currentTrackColor = TRACK_COLOR_MODES.RANDBOW;\n        this.verts.RandomizeColor();\n        this.verts.color.setAt(this.verts.length-1, this.verts.color.getAt(0));\n        this.verts.color.setAt(this.verts.length-2, this.verts.color.getAt(0));\n        this.signalGeometryUpdate();\n    }\n\n    setColorToStreet(){\n        this.currentTrackColor = TRACK_COLOR_MODES.STREET;\n        for (let v = 0; v < this.verts.length; v++) {\n            this.verts.color.setAt(v, this.getNewTrackVertColor());\n        }\n        this.verts.color.setAt(this.verts.length-1, this.verts.color.getAt(0));\n        this.verts.color.setAt(this.verts.length-2, this.verts.color.getAt(0));\n        this.signalGeometryUpdate();\n    }\n\n    addVehicle(svgAsset:SVGAsset, startTime?:number, color?:Color, driveMode?:VehicleDriveMode, speed?:number){\n        let vehicle = new VehicleModel(svgAsset, startTime, driveMode, speed);\n        if(color){\n            vehicle.setColor(color);\n        }\n        this.addChild(vehicle);\n        return vehicle;\n    }\n\n    update(t:number){\n        for(let c of this.children){\n            c.update(t);\n        }\n    }\n\n    getNewTrackVertColor(){\n        switch (this.currentTrackColor){\n            case TRACK_COLOR_MODES.STREET:\n                let brightness = 0.5+Math.random()*0.2;\n                return new Color(brightness, brightness, brightness);\n            case TRACK_COLOR_MODES.CONSTANT:\n                return new Color(0.4, 0.4, 0.4);\n            case TRACK_COLOR_MODES.RANDBOW:\n                return Color.Random();\n            default:\n                console.warn(`unknown track color option \"${this.currentTrackColor}\"!`);\n                break;\n        }\n    }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}