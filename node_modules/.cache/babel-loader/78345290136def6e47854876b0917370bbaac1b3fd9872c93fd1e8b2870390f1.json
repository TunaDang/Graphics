{"ast":null,"code":"import { AInteraction } from \"../AInteraction\";\nexport class AKeyboardInteraction extends AInteraction {\n  constructor(...args) {\n    super(...args);\n    this.keyDownCallback = void 0;\n    this.keyUpCallback = void 0;\n    this._keyDownEventListener = void 0;\n    this._keyUpEventListener = void 0;\n    this.keysDownState = {};\n    /**\n     * including once and capture https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @type {{[p: string]: any}}\n     */\n    this.eventListenerOptions = {};\n  }\n  clearKeyState() {\n    this.keysDownState = {};\n  }\n  setEventListenerOptions(options) {\n    if (options) {\n      this.eventListenerOptions = options;\n    }\n  }\n  setKeyDownCallback(keyDownCallback) {\n    this.keyDownCallback = keyDownCallback;\n    if (this.active) {\n      this.updateListeners();\n    }\n  }\n  setKeyUpCallback(keyUpCallback) {\n    this.keyUpCallback = keyUpCallback;\n    if (this.active) {\n      this.updateListeners();\n    }\n  }\n  _processKeyDownEvent(event) {\n    this.keysDownState[event.DOMEvent.key] = true;\n  }\n  _processKeyUpEvent(event) {\n    this.keysDownState[event.DOMEvent.key] = false;\n  }\n  updateListeners() {\n    this._removeKeyListeners();\n    const interaction = this;\n    function keyDownCallback(event) {\n      // event.preventDefault();\n      interaction._processKeyDownEvent(event);\n      interaction.keyDownCallback(event, interaction);\n    }\n    function keyUpCallback(event) {\n      // event.preventDefault();\n      interaction._processKeyUpEvent(event);\n      interaction.keyUpCallback(event, interaction);\n    }\n\n    // @ts-ignore\n    if (interaction.keyDownCallback) {\n      interaction._keyDownEventListener = interaction.addDOMEventListener('keydown', keyDownCallback, this.eventListenerOptions);\n    }\n    // @ts-ignore\n    if (interaction.keyUpCallback) {\n      interaction._keyUpEventListener = interaction.addDOMEventListener('keyup', keyUpCallback, this.eventListenerOptions);\n    }\n  }\n  _removeKeyListeners() {\n    this._keyDownEventListener = undefined;\n    this._keyUpEventListener = undefined;\n    this.clearEventListeners();\n  }\n  activate() {\n    var _this$_keyDownEventLi, _this$_keyUpEventList;\n    this.updateListeners();\n    (_this$_keyDownEventLi = this._keyDownEventListener) === null || _this$_keyDownEventLi === void 0 ? void 0 : _this$_keyDownEventLi.addListener();\n    (_this$_keyUpEventList = this._keyUpEventListener) === null || _this$_keyUpEventList === void 0 ? void 0 : _this$_keyUpEventList.addListener();\n    this.active = true;\n  }\n  static Create(element, keyDownCallback, keyUpCallback, options, handle, ...args) {\n    let host = element;\n    // if(element.ownerDocument){\n    //     host = element.ownerDocument;\n    // }\n    const interaction = new this(host, undefined, handle);\n    interaction.setEventListenerOptions(options);\n    if (keyDownCallback) {\n      interaction.setKeyDownCallback(keyDownCallback);\n    }\n    if (keyUpCallback) {\n      interaction.setKeyUpCallback(keyUpCallback);\n    }\n    interaction.bindMethods();\n    //Finally, return the interaction\n    return interaction;\n  }\n}","map":{"version":3,"names":["AInteraction","AKeyboardInteraction","constructor","args","keyDownCallback","keyUpCallback","_keyDownEventListener","_keyUpEventListener","keysDownState","eventListenerOptions","clearKeyState","setEventListenerOptions","options","setKeyDownCallback","active","updateListeners","setKeyUpCallback","_processKeyDownEvent","event","DOMEvent","key","_processKeyUpEvent","_removeKeyListeners","interaction","addDOMEventListener","undefined","clearEventListeners","activate","_this$_keyDownEventLi","_this$_keyUpEventList","addListener","Create","element","handle","host","bindMethods"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/interaction/DOM/AKeyboardInteraction.ts"],"sourcesContent":["import {AInteraction, AInteractionEvent, AInteractionEventListener,} from \"../AInteraction\";\nimport {CallbackType} from \"../../basictypes\";\n\nexport type AKeyboardInteractionCallback = (event: any, interaction: AKeyboardInteraction) => any;\n\nexport interface HasKeyboardInteraction{\n    onKeyDown(event:AInteractionEvent, interaction:AKeyboardInteraction):void;\n    onKeyUp(event:AInteractionEvent, interaction:AKeyboardInteraction):void;\n}\n\nexport class AKeyboardInteraction extends AInteraction {\n    public keyDownCallback!: AKeyboardInteractionCallback;\n    public keyUpCallback!: AKeyboardInteractionCallback;\n    public _keyDownEventListener!: AInteractionEventListener | undefined;\n    public _keyUpEventListener!: AInteractionEventListener | undefined;\n    public keysDownState: { [name: string]: boolean } = {};\n    /**\n     * including once and capture https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @type {{[p: string]: any}}\n     */\n    public eventListenerOptions: { [name: string]: any } = {}\n\n    clearKeyState() {\n        this.keysDownState = {};\n    }\n\n    setEventListenerOptions(options?: { [name: string]: any }) {\n        if (options) {\n            this.eventListenerOptions = options;\n        }\n    }\n\n    setKeyDownCallback(keyDownCallback: CallbackType) {\n        this.keyDownCallback = keyDownCallback;\n        if (this.active) {\n            this.updateListeners();\n        }\n    }\n\n    setKeyUpCallback(keyUpCallback: CallbackType) {\n        this.keyUpCallback = keyUpCallback;\n        if (this.active) {\n            this.updateListeners();\n        }\n    }\n\n    _processKeyDownEvent(event: AInteractionEvent) {\n        this.keysDownState[(event.DOMEvent as KeyboardEvent).key] = true;\n    }\n\n    _processKeyUpEvent(event: AInteractionEvent) {\n        this.keysDownState[(event.DOMEvent as KeyboardEvent).key] = false;\n    }\n\n    updateListeners() {\n        this._removeKeyListeners();\n        const interaction = this;\n\n        function keyDownCallback(event: AInteractionEvent) {\n            // event.preventDefault();\n            interaction._processKeyDownEvent(event);\n            interaction.keyDownCallback(event, interaction);\n        }\n\n        function keyUpCallback(event: AInteractionEvent) {\n            // event.preventDefault();\n            interaction._processKeyUpEvent(event);\n            interaction.keyUpCallback(event, interaction);\n        }\n\n        // @ts-ignore\n        if (interaction.keyDownCallback) {\n            interaction._keyDownEventListener = interaction.addDOMEventListener('keydown', keyDownCallback, this.eventListenerOptions);\n        }\n        // @ts-ignore\n        if (interaction.keyUpCallback) {\n            interaction._keyUpEventListener = interaction.addDOMEventListener('keyup', keyUpCallback, this.eventListenerOptions);\n        }\n    }\n\n    _removeKeyListeners() {\n        this._keyDownEventListener = undefined;\n        this._keyUpEventListener = undefined;\n        this.clearEventListeners();\n    }\n\n    activate() {\n        this.updateListeners();\n        this._keyDownEventListener?.addListener();\n        this._keyUpEventListener?.addListener();\n        this.active = true;\n    }\n\n    static Create(element: any, keyDownCallback?: CallbackType, keyUpCallback?: CallbackType, options?: { [name: string]: any }, handle?: string, ...args: any[]) {\n        let host = element;\n        // if(element.ownerDocument){\n        //     host = element.ownerDocument;\n        // }\n        const interaction = new this(host, undefined, handle);\n        interaction.setEventListenerOptions(options);\n        if (keyDownCallback) {\n            interaction.setKeyDownCallback(keyDownCallback);\n        }\n        if (keyUpCallback) {\n            interaction.setKeyUpCallback(keyUpCallback);\n        }\n\n        interaction.bindMethods();\n        //Finally, return the interaction\n        return interaction;\n    }\n}\n"],"mappings":"AAAA,SAAQA,YAAY,QAAsD,iBAAiB;AAU3F,OAAO,MAAMC,oBAAoB,SAASD,YAAY,CAAC;EAAAE,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC5CC,eAAe;IAAA,KACfC,aAAa;IAAA,KACbC,qBAAqB;IAAA,KACrBC,mBAAmB;IAAA,KACnBC,aAAa,GAAgC,CAAC,CAAC;IACtD;AACJ;AACA;AACA;IAHI,KAIOC,oBAAoB,GAA4B,CAAC,CAAC;EAAA;EAEzDC,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACF,aAAa,GAAG,CAAC,CAAC;EAC3B;EAEAG,uBAAuBA,CAACC,OAAiC,EAAE;IACvD,IAAIA,OAAO,EAAE;MACT,IAAI,CAACH,oBAAoB,GAAGG,OAAO;IACvC;EACJ;EAEAC,kBAAkBA,CAACT,eAA6B,EAAE;IAC9C,IAAI,CAACA,eAAe,GAAGA,eAAe;IACtC,IAAI,IAAI,CAACU,MAAM,EAAE;MACb,IAAI,CAACC,eAAe,CAAC,CAAC;IAC1B;EACJ;EAEAC,gBAAgBA,CAACX,aAA2B,EAAE;IAC1C,IAAI,CAACA,aAAa,GAAGA,aAAa;IAClC,IAAI,IAAI,CAACS,MAAM,EAAE;MACb,IAAI,CAACC,eAAe,CAAC,CAAC;IAC1B;EACJ;EAEAE,oBAAoBA,CAACC,KAAwB,EAAE;IAC3C,IAAI,CAACV,aAAa,CAAEU,KAAK,CAACC,QAAQ,CAAmBC,GAAG,CAAC,GAAG,IAAI;EACpE;EAEAC,kBAAkBA,CAACH,KAAwB,EAAE;IACzC,IAAI,CAACV,aAAa,CAAEU,KAAK,CAACC,QAAQ,CAAmBC,GAAG,CAAC,GAAG,KAAK;EACrE;EAEAL,eAAeA,CAAA,EAAG;IACd,IAAI,CAACO,mBAAmB,CAAC,CAAC;IAC1B,MAAMC,WAAW,GAAG,IAAI;IAExB,SAASnB,eAAeA,CAACc,KAAwB,EAAE;MAC/C;MACAK,WAAW,CAACN,oBAAoB,CAACC,KAAK,CAAC;MACvCK,WAAW,CAACnB,eAAe,CAACc,KAAK,EAAEK,WAAW,CAAC;IACnD;IAEA,SAASlB,aAAaA,CAACa,KAAwB,EAAE;MAC7C;MACAK,WAAW,CAACF,kBAAkB,CAACH,KAAK,CAAC;MACrCK,WAAW,CAAClB,aAAa,CAACa,KAAK,EAAEK,WAAW,CAAC;IACjD;;IAEA;IACA,IAAIA,WAAW,CAACnB,eAAe,EAAE;MAC7BmB,WAAW,CAACjB,qBAAqB,GAAGiB,WAAW,CAACC,mBAAmB,CAAC,SAAS,EAAEpB,eAAe,EAAE,IAAI,CAACK,oBAAoB,CAAC;IAC9H;IACA;IACA,IAAIc,WAAW,CAAClB,aAAa,EAAE;MAC3BkB,WAAW,CAAChB,mBAAmB,GAAGgB,WAAW,CAACC,mBAAmB,CAAC,OAAO,EAAEnB,aAAa,EAAE,IAAI,CAACI,oBAAoB,CAAC;IACxH;EACJ;EAEAa,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAAChB,qBAAqB,GAAGmB,SAAS;IACtC,IAAI,CAAClB,mBAAmB,GAAGkB,SAAS;IACpC,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC9B;EAEAC,QAAQA,CAAA,EAAG;IAAA,IAAAC,qBAAA,EAAAC,qBAAA;IACP,IAAI,CAACd,eAAe,CAAC,CAAC;IACtB,CAAAa,qBAAA,OAAI,CAACtB,qBAAqB,cAAAsB,qBAAA,uBAA1BA,qBAAA,CAA4BE,WAAW,CAAC,CAAC;IACzC,CAAAD,qBAAA,OAAI,CAACtB,mBAAmB,cAAAsB,qBAAA,uBAAxBA,qBAAA,CAA0BC,WAAW,CAAC,CAAC;IACvC,IAAI,CAAChB,MAAM,GAAG,IAAI;EACtB;EAEA,OAAOiB,MAAMA,CAACC,OAAY,EAAE5B,eAA8B,EAAEC,aAA4B,EAAEO,OAAiC,EAAEqB,MAAe,EAAE,GAAG9B,IAAW,EAAE;IAC1J,IAAI+B,IAAI,GAAGF,OAAO;IAClB;IACA;IACA;IACA,MAAMT,WAAW,GAAG,IAAI,IAAI,CAACW,IAAI,EAAET,SAAS,EAAEQ,MAAM,CAAC;IACrDV,WAAW,CAACZ,uBAAuB,CAACC,OAAO,CAAC;IAC5C,IAAIR,eAAe,EAAE;MACjBmB,WAAW,CAACV,kBAAkB,CAACT,eAAe,CAAC;IACnD;IACA,IAAIC,aAAa,EAAE;MACfkB,WAAW,CAACP,gBAAgB,CAACX,aAAa,CAAC;IAC/C;IAEAkB,WAAW,CAACY,WAAW,CAAC,CAAC;IACzB;IACA,OAAOZ,WAAW;EACtB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}