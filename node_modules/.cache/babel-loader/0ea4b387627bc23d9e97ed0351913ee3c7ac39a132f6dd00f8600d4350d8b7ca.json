{"ast":null,"code":"import { ANodeView2D } from \"../../../nodeView\";\nimport { ATriangleMeshGraphic } from \"../../../../rendering\";\nexport class A2DMeshView extends ANodeView2D {\n  constructor(...args) {\n    super(...args);\n    this.meshGraphic = void 0;\n  }\n  get model() {\n    return this._model;\n  }\n  static Create(model, ...args) {\n    let view = new this();\n    view.setModel(model);\n    return view;\n  }\n  init() {\n    this.meshGraphic = new ATriangleMeshGraphic(this.model.verts, this.model.material.threejs);\n    this.registerAndAddGraphic(this.meshGraphic);\n    const self = this;\n    this.subscribe(this.model.addGeometryListener(() => {\n      self.updateGeometry();\n    }));\n  }\n  update() {\n    // this.meshGraphic.setVerts2D(this.model.verts);\n    this.setTransform(this.model.transform);\n  }\n  updateGeometry() {\n    this.meshGraphic.setVerts2D(this.model.verts);\n  }\n}","map":{"version":3,"names":["ANodeView2D","ATriangleMeshGraphic","A2DMeshView","constructor","args","meshGraphic","model","_model","Create","view","setModel","init","verts","material","threejs","registerAndAddGraphic","self","subscribe","addGeometryListener","updateGeometry","update","setTransform","transform","setVerts2D"],"sources":["/Users/twist/Documents/Books/Fall 2024/Graphics/A1-Intro-To-Graphics-FA2024/src/anigraph/scene/nodes/2d/mesh2d/A2DMeshView.ts"],"sourcesContent":["import {ANodeView, ANodeView2D} from \"../../../nodeView\";\nimport {ATriangleMeshGraphic} from \"../../../../rendering\";\nimport {ANodeModel} from \"../../../nodeModel\";\nimport {A2DMeshModel} from \"./A2DMeshModel\";\nimport {Mat4} from \"../../../../math\";\n\nexport class A2DMeshView extends ANodeView2D{\n    meshGraphic!:ATriangleMeshGraphic;\n    get model():A2DMeshModel{\n        return this._model as A2DMeshModel;\n    }\n\n    static Create(model:ANodeModel, ...args:any[]){\n        let view = new this();\n        view.setModel(model);\n        return view;\n    }\n\n    init(){\n        this.meshGraphic = new ATriangleMeshGraphic(this.model.verts, this.model.material.threejs);\n        this.registerAndAddGraphic(this.meshGraphic);\n        const self = this;\n        this.subscribe(this.model.addGeometryListener(\n            ()=>{\n                self.updateGeometry();\n            }\n        ))\n    }\n\n    update(): void {\n        // this.meshGraphic.setVerts2D(this.model.verts);\n        this.setTransform(this.model.transform);\n    }\n\n    updateGeometry(){\n        this.meshGraphic.setVerts2D(this.model.verts);\n    }\n}\n"],"mappings":"AAAA,SAAmBA,WAAW,QAAO,mBAAmB;AACxD,SAAQC,oBAAoB,QAAO,uBAAuB;AAK1D,OAAO,MAAMC,WAAW,SAASF,WAAW;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACxCC,WAAW;EAAA;EACX,IAAIC,KAAKA,CAAA,EAAe;IACpB,OAAO,IAAI,CAACC,MAAM;EACtB;EAEA,OAAOC,MAAMA,CAACF,KAAgB,EAAE,GAAGF,IAAU,EAAC;IAC1C,IAAIK,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC;IACrBA,IAAI,CAACC,QAAQ,CAACJ,KAAK,CAAC;IACpB,OAAOG,IAAI;EACf;EAEAE,IAAIA,CAAA,EAAE;IACF,IAAI,CAACN,WAAW,GAAG,IAAIJ,oBAAoB,CAAC,IAAI,CAACK,KAAK,CAACM,KAAK,EAAE,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,OAAO,CAAC;IAC1F,IAAI,CAACC,qBAAqB,CAAC,IAAI,CAACV,WAAW,CAAC;IAC5C,MAAMW,IAAI,GAAG,IAAI;IACjB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACX,KAAK,CAACY,mBAAmB,CACzC,MAAI;MACAF,IAAI,CAACG,cAAc,CAAC,CAAC;IACzB,CACJ,CAAC,CAAC;EACN;EAEAC,MAAMA,CAAA,EAAS;IACX;IACA,IAAI,CAACC,YAAY,CAAC,IAAI,CAACf,KAAK,CAACgB,SAAS,CAAC;EAC3C;EAEAH,cAAcA,CAAA,EAAE;IACZ,IAAI,CAACd,WAAW,CAACkB,UAAU,CAAC,IAAI,CAACjB,KAAK,CAACM,KAAK,CAAC;EACjD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}